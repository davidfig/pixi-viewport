{"version":3,"file":"viewport.js","sources":["../src/input-manager.js","../src/plugin-manager.js","../src/plugins/plugin.js","../src/plugins/drag.js","../src/plugins/paint.js","../src/plugins/pinch.js","../src/plugins/clamp.js","../src/plugins/clamp-zoom.js","../src/plugins/decelerate.js","../node_modules/penner/penner.js","../src/ease.js","../src/plugins/bounce.js","../src/plugins/snap.js","../src/plugins/snap-zoom.js","../src/plugins/follow.js","../src/plugins/wheel.js","../src/plugins/mouse-edges.js","../src/viewport.js"],"sourcesContent":["import * as PIXI from 'pixi.js'\r\n\r\n/**\r\n * @typedef ViewportTouch\r\n * @property {number} id\r\n * @property {PIXI.Point} last\r\n*/\r\n\r\n/**\r\n * handles all input for Viewport\r\n * @private\r\n */\r\nexport class InputManager\r\n{\r\n    constructor(viewport)\r\n    {\r\n        this.viewport = viewport\r\n\r\n        /**\r\n         * list of active touches on viewport\r\n         * @type {ViewportTouch[]}\r\n         */\r\n        this.touches = []\r\n        this.addListeners()\r\n    }\r\n\r\n    /**\r\n     * add input listeners\r\n     * @private\r\n     */\r\n    addListeners()\r\n    {\r\n        this.viewport.interactive = true\r\n        if (!this.viewport.forceHitArea)\r\n        {\r\n            this.viewport.hitArea = new PIXI.Rectangle(0, 0, this.viewport.worldWidth, this.viewport.worldHeight)\r\n        }\r\n        this.viewport.on('pointerdown', this.down, this)\r\n        this.viewport.on('pointermove', this.move, this)\r\n        this.viewport.on('pointerup', this.up, this)\r\n        this.viewport.on('pointerupoutside', this.up, this)\r\n        this.viewport.on('pointercancel', this.up, this)\r\n        this.viewport.on('pointerout', this.up, this)\r\n        this.wheelFunction = (e) => this.handleWheel(e)\r\n        this.viewport.options.divWheel.addEventListener('wheel', this.wheelFunction, { passive: this.viewport.options.passiveWheel })\r\n        this.isMouseDown = false\r\n    }\r\n\r\n    /**\r\n     * removes all event listeners from viewport\r\n     * (useful for cleanup of wheel when removing viewport)\r\n     */\r\n    destroy()\r\n    {\r\n        this.viewport.options.divWheel.removeEventListener('wheel', this.wheelFunction)\r\n    }\r\n\r\n    /**\r\n     * handle down events for viewport\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     */\r\n    down(event)\r\n    {\r\n        if (this.viewport.pause || !this.viewport.worldVisible)\r\n        {\r\n            return\r\n        }\r\n        if (event.data.pointerType === 'mouse')\r\n        {\r\n            this.isMouseDown = true\r\n        }\r\n        else if (!this.get(event.data.pointerId))\r\n        {\r\n            this.touches.push({ id: event.data.pointerId, last: null })\r\n        }\r\n        if (this.count() === 1)\r\n        {\r\n            this.last = event.data.global.clone()\r\n\r\n            // clicked event does not fire if viewport is decelerating or bouncing\r\n            const decelerate = this.viewport.plugins.get('decelerate')\r\n            const bounce = this.viewport.plugins.get('bounce')\r\n            if ((!decelerate || !decelerate.isActive()) && (!bounce || !bounce.isActive()))\r\n            {\r\n                this.clickedAvailable = true\r\n            }\r\n            else\r\n            {\r\n                this.clickedAvailable = false\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.clickedAvailable = false\r\n        }\r\n\r\n        const stop = this.viewport.plugins.down(event)\r\n        if (stop && this.viewport.options.stopPropagation)\r\n        {\r\n            event.stopPropagation()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {number} change\r\n     * @returns whether change exceeds threshold\r\n     */\r\n    checkThreshold(change)\r\n    {\r\n        if (Math.abs(change) >= this.viewport.threshold)\r\n        {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * handle move events for viewport\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     */\r\n    move(event)\r\n    {\r\n        if (this.viewport.pause || !this.viewport.worldVisible)\r\n        {\r\n            return\r\n        }\r\n\r\n        const stop = this.viewport.plugins.move(event)\r\n\r\n        if (this.clickedAvailable)\r\n        {\r\n            const distX = event.data.global.x - this.last.x\r\n            const distY = event.data.global.y - this.last.y\r\n            if (this.checkThreshold(distX) || this.checkThreshold(distY))\r\n            {\r\n                this.clickedAvailable = false\r\n            }\r\n        }\r\n\r\n        if (stop && this.viewport.options.stopPropagation)\r\n        {\r\n            event.stopPropagation()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handle up events for viewport\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     */\r\n    up(event)\r\n    {\r\n        if (this.viewport.pause || !this.viewport.worldVisible)\r\n        {\r\n            return\r\n        }\r\n\r\n        if (event.data.pointerType === 'mouse')\r\n        {\r\n            this.isMouseDown = false\r\n        }\r\n\r\n        if (event.data.pointerType !== 'mouse')\r\n        {\r\n            this.remove(event.data.pointerId)\r\n        }\r\n\r\n        const stop = this.viewport.plugins.up(event)\r\n\r\n        if (this.clickedAvailable && this.count() === 0)\r\n        {\r\n            this.viewport.emit('clicked', { screen: this.last, world: this.viewport.toWorld(this.last), viewport: this })\r\n            this.clickedAvailable = false\r\n        }\r\n\r\n        if (stop && this.viewport.options.stopPropagation)\r\n        {\r\n            event.stopPropagation()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * gets pointer position if this.interaction is set\r\n     * @param {WheelEvent} event\r\n     * @return {PIXI.Point}\r\n     */\r\n    getPointerPosition(event)\r\n    {\r\n        let point = new PIXI.Point()\r\n        if (this.viewport.options.interaction)\r\n        {\r\n            this.viewport.options.interaction.mapPositionToPoint(point, event.clientX, event.clientY)\r\n        }\r\n        else\r\n        {\r\n            point.x = event.clientX\r\n            point.y = event.clientY\r\n        }\r\n        return point\r\n    }\r\n\r\n    /**\r\n     * handle wheel events\r\n     * @param {WheelEvent} event\r\n     */\r\n    handleWheel(event)\r\n    {\r\n        if (this.viewport.pause || !this.viewport.worldVisible)\r\n        {\r\n            return\r\n        }\r\n\r\n        // only handle wheel events where the mouse is over the viewport\r\n        const point = this.viewport.toLocal(this.getPointerPosition(event))\r\n        if (this.viewport.left <= point.x && point.x <= this.viewport.right && this.viewport.top <= point.y && point.y <= this.viewport.bottom)\r\n        {\r\n            return this.viewport.plugins.wheel(event)\r\n        }\r\n    }\r\n\r\n    pause()\r\n    {\r\n        this.touches = []\r\n        this.isMouseDown = false\r\n    }\r\n\r\n    /**\r\n     * get touch by id\r\n     * @param {number} id\r\n     * @return {ViewportTouch}\r\n     */\r\n    get(id)\r\n    {\r\n        for (let touch of this.touches)\r\n        {\r\n            if (touch.id === id)\r\n            {\r\n                return touch\r\n            }\r\n        }\r\n        return null\r\n    }\r\n\r\n    /**\r\n     * remove touch by number\r\n     * @param {number} id\r\n     */\r\n    remove(id)\r\n    {\r\n        for (let i = 0; i < this.touches.length; i++)\r\n        {\r\n            if (this.touches[i].id === id)\r\n            {\r\n                this.touches.splice(i, 1)\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @returns {number} count of mouse/touch pointers that are down on the viewport\r\n     */\r\n    count()\r\n    {\r\n        return (this.isMouseDown ? 1 : 0) + this.touches.length\r\n    }\r\n}","const PLUGIN_ORDER = ['drag', 'paint', 'pinch', 'wheel', 'follow', 'mouse-edges', 'decelerate', 'bounce', 'snap-zoom', 'clamp-zoom', 'snap', 'clamp']\r\n\r\n/**\r\n * Use this to access current plugins or add user-defined plugins\r\n */\r\nexport class PluginManager\r\n{\r\n    /**\r\n     * instantiated by Viewport\r\n     * @param {Viewport} viewport\r\n     */\r\n    constructor(viewport)\r\n    {\r\n        this.viewport = viewport\r\n        this.list = []\r\n        this.plugins = {}\r\n    }\r\n\r\n    /**\r\n     * Inserts a named plugin or a user plugin into the viewport\r\n     * default plugin order: 'drag', 'paint', 'pinch', 'wheel', 'follow', 'mouse-edges', 'decelerate', 'bounce', 'snap-zoom', 'clamp-zoom', 'snap', 'clamp'\r\n     * @param {string} name of plugin\r\n     * @param {Plugin} plugin - instantiated Plugin class\r\n     * @param {number} index to insert userPlugin (otherwise inserts it at the end)\r\n     */\r\n    add(name, plugin, index = PLUGIN_ORDER.length)\r\n    {\r\n        this.plugins[name] = plugin\r\n        const current = PLUGIN_ORDER.indexOf(name)\r\n        if (current !== -1)\r\n        {\r\n            PLUGIN_ORDER.splice(current, 1)\r\n        }\r\n        PLUGIN_ORDER.splice(index, 0, name)\r\n        this.sort()\r\n    }\r\n\r\n    /**\r\n     * get plugin\r\n     * @param {string} name of plugin\r\n     * @return {Plugin}\r\n     */\r\n    get(name)\r\n    {\r\n        return this.plugins[name]\r\n    }\r\n\r\n    /**\r\n     * update all active plugins\r\n     * @private\r\n     * @param {number} elapsed type in milliseconds since last update\r\n     */\r\n    update(elapsed)\r\n    {\r\n        for (let plugin of this.list)\r\n        {\r\n            plugin.update(elapsed)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * resize all active plugins\r\n     * @private\r\n     */\r\n    resize()\r\n    {\r\n        for (let plugin of this.list)\r\n        {\r\n            plugin.resize()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * clamps and resets bounce and decelerate (as needed) after manually moving viewport\r\n     */\r\n    reset()\r\n    {\r\n        if (this.plugins['bounce'])\r\n        {\r\n            this.plugins['bounce'].reset()\r\n            this.plugins['bounce'].bounce()\r\n        }\r\n        if (this.plugins['decelerate'])\r\n        {\r\n            this.plugins['decelerate'].reset()\r\n        }\r\n        if (this.plugins['snap'])\r\n        {\r\n            this.plugins['snap'].reset()\r\n        }\r\n        if (this.plugins['clamp'])\r\n        {\r\n            this.plugins['clamp'].update()\r\n        }\r\n        if (this.plugins['clamp-zoom'])\r\n        {\r\n            this.plugins['clamp-zoom'].clamp()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * removes installed plugin\r\n     * @param {string} name of plugin (e.g., 'drag', 'pinch')\r\n     */\r\n    remove(name)\r\n    {\r\n        if (this.plugins[name])\r\n        {\r\n            this.plugins[name] = null\r\n            this.viewport.emit(name + '-remove')\r\n            this.sort()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * pause plugin\r\n     * @param {string} name of plugin (e.g., 'drag', 'pinch')\r\n     */\r\n    pause(name)\r\n    {\r\n        if (this.plugins[name])\r\n        {\r\n            this.plugins[name].pause()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * resume plugin\r\n     * @param {string} name of plugin (e.g., 'drag', 'pinch')\r\n     */\r\n    resume(name)\r\n    {\r\n        if (this.plugins[name])\r\n        {\r\n            this.plugins[name].resume()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * sort plugins according to PLUGIN_ORDER\r\n     * @private\r\n     */\r\n    sort()\r\n    {\r\n        this.list = []\r\n        for (let plugin of PLUGIN_ORDER)\r\n        {\r\n            if (this.plugins[plugin])\r\n            {\r\n                this.list.push(this.plugins[plugin])\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handle down for all plugins\r\n     * @private\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    down(event)\r\n    {\r\n        let stop = false\r\n        for (let plugin of this.list)\r\n        {\r\n            if (plugin.down(event))\r\n            {\r\n                stop = true\r\n            }\r\n        }\r\n        return stop\r\n    }\r\n\r\n    /**\r\n     * handle move for all plugins\r\n     * @private\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    move(event)\r\n    {\r\n        let stop = false\r\n        for (let plugin of this.viewport.plugins.list)\r\n        {\r\n            if (plugin.move(event))\r\n            {\r\n                stop = true\r\n            }\r\n        }\r\n        return stop\r\n    }\r\n\r\n    /**\r\n     * handle up for all plugins\r\n     * @private\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    up(event)\r\n    {\r\n        let stop = false\r\n        for (let plugin of this.list)\r\n        {\r\n            if (plugin.up(event))\r\n            {\r\n                stop = true\r\n            }\r\n        }\r\n        return stop\r\n    }\r\n\r\n    /**\r\n     * handle wheel event for all plugins\r\n     * @private\r\n     * @param {WheelEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    wheel(e)\r\n    {\r\n        let result = false\r\n        for (let plugin of this.list)\r\n        {\r\n            if (plugin.wheel(e))\r\n            {\r\n                result = true\r\n            }\r\n        }\r\n        return result\r\n    }\r\n}","/**\r\n * derive this class to create user-defined plugins\r\n */\r\nexport class Plugin\r\n{\r\n    /**\r\n     * @param {Viewport} parent\r\n     */\r\n    constructor(parent)\r\n    {\r\n        this.parent = parent\r\n        this.paused = false\r\n    }\r\n\r\n    /** called when plugin is removed */\r\n    destroy() {}\r\n\r\n    /**\r\n     * handler for pointerdown PIXI event\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    down()\r\n    {\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * handler for pointermove PIXI event\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    move()\r\n    {\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * handler for pointerup PIXI event\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    up()\r\n    {\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * handler for wheel event on div\r\n     * @param {WheelEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    wheel()\r\n    {\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * called on each tick\r\n     * @param {number} elapsed time in millisecond since last update\r\n     */\r\n    update() { }\r\n\r\n    /** called when the viewport is resized */\r\n    resize() { }\r\n\r\n    /** called when the viewport is manually moved */\r\n    reset() { }\r\n\r\n    /** pause the plugin */\r\n    pause()\r\n    {\r\n        this.paused = true\r\n    }\r\n\r\n    /** un-pause the plugin */\r\n    resume()\r\n    {\r\n        this.paused = false\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\n\r\nimport { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef {object} LastDrag\r\n * @property {number} x\r\n * @property {number} y\r\n * @property {PIXI.Point} parent\r\n */\r\n\r\n/**\r\n * @typedef DragOptions\r\n * @property {string} [direction=all] direction to drag\r\n * @property {boolean} [wheel=true] use wheel to scroll in y direction(unless wheel plugin is active)\r\n * @property {number} [wheelScroll=1] number of pixels to scroll with each wheel spin\r\n * @property {boolean} [reverse] reverse the direction of the wheel scroll\r\n * @property {(boolean|string)} [clampWheel=false] clamp wheel(to avoid weird bounce with mouse wheel)\r\n * @property {string} [underflow=center] where to place world if too small for screen\r\n * @property {number} [factor=1] factor to multiply drag to increase the speed of movement\r\n * @property {string} [mouseButtons=all] changes which mouse buttons trigger drag, use: 'all', 'left', right' 'middle', or some combination, like, 'middle-right'\r\n */\r\n\r\nconst dragOptions = {\r\n    direction: 'all',\r\n    wheel: true,\r\n    wheelScroll: 1,\r\n    reverse: false,\r\n    clampWheel: false,\r\n    underflow: 'center',\r\n    factor: 1,\r\n    mouseButtons: 'all'\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport class Drag extends Plugin\r\n{\r\n    /**\r\n     * @param {Viewport} parent\r\n     * @param {DragOptions} options\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, dragOptions, options)\r\n        this.moved = false\r\n        this.reverse = this.options.reverse ? 1 : -1\r\n        this.xDirection = !this.options.direction || this.options.direction === 'all' || this.options.direction === 'x'\r\n        this.yDirection = !this.options.direction || this.options.direction === 'all' || this.options.direction === 'y'\r\n\r\n        this.parseUnderflow()\r\n        this.mouseButtons(this.options.mouseButtons)\r\n    }\r\n\r\n    /**\r\n     * initialize mousebuttons array\r\n     * @param {string} buttons\r\n     */\r\n    mouseButtons(buttons)\r\n    {\r\n        if (!buttons || buttons === 'all')\r\n        {\r\n            this.mouse = [true, true, true]\r\n        }\r\n        else\r\n        {\r\n            this.mouse = [\r\n                buttons.indexOf('left') === -1 ? false : true,\r\n                buttons.indexOf('middle') === -1 ? false : true,\r\n                buttons.indexOf('right') === -1 ? false : true\r\n            ]\r\n        }\r\n    }\r\n\r\n    parseUnderflow()\r\n    {\r\n        const clamp = this.options.underflow.toLowerCase()\r\n        if (clamp === 'center')\r\n        {\r\n            this.underflowX = 0\r\n            this.underflowY = 0\r\n        }\r\n        else\r\n        {\r\n            this.underflowX = (clamp.indexOf('left') !== -1) ? -1 : (clamp.indexOf('right') !== -1) ? 1 : 0\r\n            this.underflowY = (clamp.indexOf('top') !== -1) ? -1 : (clamp.indexOf('bottom') !== -1) ? 1 : 0\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    checkButtons(event)\r\n    {\r\n        const isMouse = event.data.pointerType === 'mouse'\r\n        const count = this.parent.input.count()\r\n        if ((count === 1) || (count > 1 && !this.parent.plugins.get('pinch')))\r\n        {\r\n            if (!isMouse || this.mouse[event.data.button])\r\n            {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    /**\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     */\r\n    down(event)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n        if (this.checkButtons(event))\r\n        {\r\n            this.last = { x: event.data.global.x, y: event.data.global.y }\r\n            this.current = event.data.pointerId\r\n            return true\r\n        }\r\n        else\r\n        {\r\n            this.last = null\r\n        }\r\n    }\r\n\r\n    get active()\r\n    {\r\n        return this.moved\r\n    }\r\n\r\n    /**\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     */\r\n    move(event)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n        if (this.last && this.current === event.data.pointerId)\r\n        {\r\n            const x = event.data.global.x\r\n            const y = event.data.global.y\r\n            const count = this.parent.input.count()\r\n            if (count === 1 || (count > 1 && !this.parent.plugins.get('pinch')))\r\n            {\r\n                const distX = x - this.last.x\r\n                const distY = y - this.last.y\r\n                if (this.moved || ((this.xDirection && this.parent.input.checkThreshold(distX)) || (this.yDirection && this.parent.input.checkThreshold(distY))))\r\n                {\r\n                    const newPoint = { x, y }\r\n                    if (this.xDirection)\r\n                    {\r\n                        this.parent.x += (newPoint.x - this.last.x) * this.options.factor\r\n                    }\r\n                    if (this.yDirection)\r\n                    {\r\n                        this.parent.y += (newPoint.y - this.last.y) * this.options.factor\r\n                    }\r\n                    this.last = newPoint\r\n                    if (!this.moved)\r\n                    {\r\n                        this.parent.emit('drag-start', { screen: new PIXI.Point(this.last.x, this.last.y), world: this.parent.toWorld(new PIXI.Point(this.last.x, this.last.y)), viewport: this.parent})\r\n                    }\r\n                    this.moved = true\r\n                    this.parent.emit('moved', { viewport: this.parent, type: 'drag' })\r\n                    return true\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.moved = false\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    up()\r\n    {\r\n        const touches = this.parent.input.touches\r\n        if (touches.length === 1)\r\n        {\r\n            const pointer = touches[0]\r\n            if (pointer.last)\r\n            {\r\n                this.last = { x: pointer.last.x, y: pointer.last.y }\r\n                this.current = pointer.id\r\n            }\r\n            this.moved = false\r\n            return true\r\n        }\r\n        else if (this.last)\r\n        {\r\n            if (this.moved)\r\n            {\r\n                const screen = new PIXI.Point(this.last.x, this.last.y)\r\n                this.parent.emit('drag-end', {screen, world: this.parent.toWorld(screen), viewport: this.parent})\r\n                this.last = null\r\n                this.moved = false\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {WheelEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    wheel(event)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        if (this.options.wheel)\r\n        {\r\n            const wheel = this.parent.plugins.get('wheel')\r\n            if (!wheel)\r\n            {\r\n                if (this.xDirection)\r\n                {\r\n                    this.parent.x += event.deltaX * this.options.wheelScroll * this.reverse\r\n                }\r\n                if (this.yDirection)\r\n                {\r\n                    this.parent.y += event.deltaY * this.options.wheelScroll * this.reverse\r\n                }\r\n                if (this.options.clampWheel)\r\n                {\r\n                    this.clamp()\r\n                }\r\n                this.parent.emit('wheel-scroll', this.parent)\r\n                this.parent.emit('moved', this.parent)\r\n                if (!this.parent.options.passiveWheel)\r\n                {\r\n                    event.preventDefault()\r\n                }\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    resume()\r\n    {\r\n        this.last = null\r\n        this.paused = false\r\n    }\r\n\r\n    clamp()\r\n    {\r\n        const decelerate = this.parent.plugins.get('decelerate') || {}\r\n        if (this.options.clampWheel !== 'y')\r\n        {\r\n            if (this.parent.screenWorldWidth < this.parent.screenWidth)\r\n            {\r\n                switch (this.underflowX)\r\n                {\r\n                    case -1:\r\n                        this.parent.x = 0\r\n                        break\r\n                    case 1:\r\n                        this.parent.x = (this.parent.screenWidth - this.parent.screenWorldWidth)\r\n                        break\r\n                    default:\r\n                        this.parent.x = (this.parent.screenWidth - this.parent.screenWorldWidth) / 2\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this.parent.left < 0)\r\n                {\r\n                    this.parent.x = 0\r\n                    decelerate.x = 0\r\n                }\r\n                else if (this.parent.right > this.parent.worldWidth)\r\n                {\r\n                    this.parent.x = -this.parent.worldWidth * this.parent.scale.x + this.parent.screenWidth\r\n                    decelerate.x = 0\r\n                }\r\n            }\r\n        }\r\n        if (this.options.clampWheel !== 'x')\r\n        {\r\n            if (this.parent.screenWorldHeight < this.parent.screenHeight)\r\n            {\r\n                switch (this.underflowY)\r\n                {\r\n                    case -1:\r\n                        this.parent.y = 0\r\n                        break\r\n                    case 1:\r\n                        this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight)\r\n                        break\r\n                    default:\r\n                        this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight) / 2\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this.parent.top < 0)\r\n                {\r\n                    this.parent.y = 0\r\n                    decelerate.y = 0\r\n                }\r\n                if (this.parent.bottom > this.parent.worldHeight)\r\n                {\r\n                    this.parent.y = -this.parent.worldHeight * this.parent.scale.y + this.parent.screenHeight\r\n                    decelerate.y = 0\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js'\n\nimport { Plugin } from './plugin'\n\n/**\n * @typedef PaintOptions\n * @property {string} [mouseButtons=all] changes which mouse buttons trigger drag, use: 'all', 'left', right' 'middle', or some combination, like, 'middle-right'\n */\n\nconst paintOptions = {\n\tmouseButtons: 'all'\n}\n\n/**\n * @private\n */\nexport class Paint extends Plugin\n{\n\t/**\n\t * @param {Viewport} parent\n\t * @param {PaintOptions} options\n\t */\n\tconstructor(parent, options={})\n\t{\n\t\tsuper(parent)\n\t\tthis.options = Object.assign({}, paintOptions, options)\n\t\tthis.painted = false\n\t\t\n\t\tthis.mouseButtons(this.options.mouseButtons)\n\t}\n\t\n\t/**\n\t * initialize mousebuttons array\n\t * @param {string} buttons\n\t */\n\tmouseButtons(buttons)\n\t{\n\t\tif (!buttons || buttons === 'all')\n\t\t{\n\t\t\tthis.mouse = [true, true, true]\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.mouse = [\n\t\t\t\tbuttons.indexOf('left') === -1 ? false : true,\n\t\t\t\tbuttons.indexOf('middle') === -1 ? false : true,\n\t\t\t\tbuttons.indexOf('right') === -1 ? false : true\n\t\t\t]\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {PIXI.interaction.InteractionEvent} event\n\t * @returns {boolean}\n\t */\n\tcheckButtons(event)\n\t{\n\t\tconst isMouse = event.data.pointerType === 'mouse'\n\t\tconst count = this.parent.input.count()\n\t\tif ((count === 1) || (count > 1 && !this.parent.plugins.get('pinch')))\n\t\t{\n\t\t\tif (!isMouse || this.mouse[event.data.button])\n\t\t\t{\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\t\n\t/**\n\t * @param {PIXI.interaction.InteractionEvent} event\n\t */\n\tdown(event)\n\t{\n\t\tif (this.paused)\n\t\t{\n\t\t\treturn\n\t\t}\n\t\tif (this.checkButtons(event))\n\t\t{\n\t\t\tthis.last = { x: event.data.global.x, y: event.data.global.y }\n\t\t\tthis.current = event.data.pointerId\n\t\t\treturn true\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.last = null\n\t\t}\n\t}\n\t\n\tget active()\n\t{\n\t\treturn this.painted\n\t}\n\t\n\t/**\n\t * @param {PIXI.interaction.InteractionEvent} event\n\t */\n\tmove(event)\n\t{\n\t\tif (this.paused)\n\t\t{\n\t\t\treturn\n\t\t}\n\t\tif (this.last && this.current === event.data.pointerId)\n\t\t{\n\t\t\tconst x = event.data.global.x\n\t\t\tconst y = event.data.global.y\n\t\t\tconst count = this.parent.input.count()\n\t\t\tif (count === 1 || (count > 1 && !this.parent.plugins.get('pinch')))\n\t\t\t{\n\t\t\t\tconst distX = x - this.last.x\n\t\t\t\tconst distY = y - this.last.y\n\t\t\t\tif (this.painted || ((this.parent.input.checkThreshold(distX) || this.parent.input.checkThreshold(distY)) && (!this.parent.plugins.get('drag') || !this.parent.plugins.get('drag').active)))\n\t\t\t\t{\n\t\t\t\t\tthis.last = { x, y }\n\t\t\t\t\tif (!this.painted)\n\t\t\t\t\t{\n\t\t\t\t\t\tconst screen = new PIXI.Point(this.last.x, this.last.y)\n\t\t\t\t\t\tconst world = this.parent.toWorld(screen)\n\t\t\t\t\t\tthis.paintStart = screen\n\t\t\t\t\t\tthis.paintStartWorld = this.parent.toWorld(this.paintStart)\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.parent.emit('paint-start', {\n\t\t\t\t\t\t\tinteractionEvent: event,\n\t\t\t\t\t\t\tscreen,\n\t\t\t\t\t\t\tscreenStart: screen,\n\t\t\t\t\t\t\tviewport: this.parent,\n\t\t\t\t\t\t\tworld,\n\t\t\t\t\t\t\tworldStart: world,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.painted = true\n\t\t\t\t\t\n\t\t\t\t\tconst screen = event.data.global.clone()\n\t\t\t\t\tthis.parent.emit('painted', {\n\t\t\t\t\t\tinteractionEvent: event,\n\t\t\t\t\t\tscreen,\n\t\t\t\t\t\tscreenStart: this.paintStart,\n\t\t\t\t\t\tviewport: this.parent,\n\t\t\t\t\t\tworld: this.parent.toWorld(screen),\n\t\t\t\t\t\tworldStart: this.paintStartWorld,\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.painted = false\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {PIXI.interaction.InteractionEvent} event\n\t * @returns {boolean}\n\t */\n\tup(event)\n\t{\n\t\tconst touches = this.parent.input.touches\n\t\tif (touches.length === 1)\n\t\t{\n\t\t\tconst pointer = touches[0]\n\t\t\tif (pointer.last)\n\t\t\t{\n\t\t\t\tthis.last = { x: pointer.last.x, y: pointer.last.y }\n\t\t\t\tthis.current = pointer.id\n\t\t\t}\n\t\t\tthis.painted = false\n\t\t\treturn true\n\t\t}\n\t\telse if (this.last)\n\t\t{\n\t\t\tif (this.painted)\n\t\t\t{\n\t\t\t\tconst screen = event.data.global.clone()\n\t\t\t\t\n\t\t\t\tthis.parent.emit('paint-end', {\n\t\t\t\t\tinteractionEvent: event,\n\t\t\t\t\tscreen,\n\t\t\t\t\tscreenStart: this.paintStart,\n\t\t\t\t\tviewport: this.parent,\n\t\t\t\t\tworld: this.parent.toWorld(screen),\n\t\t\t\t\tworldStart: this.paintStartWorld\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tthis.last = null\n\t\t\t\tthis.painted = false\n\t\t\t\tthis.paintStart = null\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\t\n\tresume()\n\t{\n\t\tthis.last = null\n\t\tthis.paused = false\n\t}\n\t\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef {object} PinchOptions\r\n * @property {boolean} [noDrag] disable two-finger dragging\r\n * @property {number} [percent=1.0] percent to modify pinch speed\r\n * @property {PIXI.Point} [center] place this point at center during zoom instead of center of two fingers\r\n */\r\n\r\nconst pinchOptions = {\r\n    noDrag: false,\r\n    percent: 1.0,\r\n    center: null\r\n}\r\n\r\nexport class Pinch extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {PinchOptions} [options]\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, pinchOptions, options)\r\n    }\r\n\r\n    down()\r\n    {\r\n        if (this.parent.input.count() >= 2)\r\n        {\r\n            this.active = true\r\n            return true\r\n        }\r\n    }\r\n\r\n    move(e)\r\n    {\r\n        if (this.paused || !this.active)\r\n        {\r\n            return\r\n        }\r\n\r\n        const x = e.data.global.x\r\n        const y = e.data.global.y\r\n\r\n        const pointers = this.parent.input.touches\r\n        if (pointers.length >= 2)\r\n        {\r\n            const first = pointers[0]\r\n            const second = pointers[1]\r\n            const last = (first.last && second.last) ? Math.sqrt(Math.pow(second.last.x - first.last.x, 2) + Math.pow(second.last.y - first.last.y, 2)) : null\r\n            if (first.id === e.data.pointerId)\r\n            {\r\n                first.last = { x, y, data: e.data }\r\n            }\r\n            else if (second.id === e.data.pointerId)\r\n            {\r\n                second.last = { x, y, data: e.data }\r\n            }\r\n            if (last)\r\n            {\r\n                let oldPoint\r\n                const point = { x: first.last.x + (second.last.x - first.last.x) / 2, y: first.last.y + (second.last.y - first.last.y) / 2 }\r\n                if (!this.options.center)\r\n                {\r\n                    oldPoint = this.parent.toLocal(point)\r\n                }\r\n                const dist = Math.sqrt(Math.pow(second.last.x - first.last.x, 2) + Math.pow(second.last.y - first.last.y, 2))\r\n                const change = ((dist - last) / this.parent.screenWidth) * this.parent.scale.x * this.options.percent\r\n                this.parent.scale.x += change\r\n                this.parent.scale.y += change\r\n                this.parent.emit('zoomed', { viewport: this.parent, type: 'pinch' })\r\n                const clamp = this.parent.plugins.get('clamp-zoom')\r\n                if (clamp)\r\n                {\r\n                    clamp.clamp()\r\n                }\r\n                if (this.options.center)\r\n                {\r\n                    this.parent.moveCenter(this.options.center)\r\n                }\r\n                else\r\n                {\r\n                    const newPoint = this.parent.toGlobal(oldPoint)\r\n                    this.parent.x += point.x - newPoint.x\r\n                    this.parent.y += point.y - newPoint.y\r\n                    this.parent.emit('moved', { viewport: this.parent, type: 'pinch' })\r\n                }\r\n                if (!this.options.noDrag && this.lastCenter)\r\n                {\r\n                    this.parent.x += point.x - this.lastCenter.x\r\n                    this.parent.y += point.y - this.lastCenter.y\r\n                    this.parent.emit('moved', { viewport: this.parent, type: 'pinch' })\r\n                }\r\n                this.lastCenter = point\r\n                this.moved = true\r\n            }\r\n            else\r\n            {\r\n                if (!this.pinching)\r\n                {\r\n                    this.parent.emit('pinch-start', this.parent)\r\n                    this.pinching = true\r\n                }\r\n            }\r\n            return true\r\n        }\r\n    }\r\n\r\n    up()\r\n    {\r\n        if (this.pinching)\r\n        {\r\n            if (this.parent.input.touches.length <= 1)\r\n            {\r\n                this.active = false\r\n                this.lastCenter = null\r\n                this.pinching = false\r\n                this.moved = false\r\n                this.parent.emit('pinch-end', this.parent)\r\n                return true\r\n            }\r\n        }\r\n    }\r\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef ClampOptions\r\n * @property {(number|boolean)} [left=false] clamp left; true = 0\r\n * @property {(number|boolean)} [right=false] clamp right; true = viewport.worldWidth\r\n * @property {(number|boolean)} [top=false] clamp top; true = 0\r\n * @property {(number|boolean)} [bottom=false] clamp bottom; true = viewport.worldHeight\r\n * @property {string} [direction] (all, x, or y) using clamps of [0, viewport.worldWidth/viewport.worldHeight]; replaces left/right/top/bottom if set\r\n * @property {string} [underflow=center] where to place world if too small for screen (e.g., top-right, center, none, bottomleft)\r\n */\r\n\r\nconst clampOptions =\r\n{\r\n    left: false,\r\n    right: false,\r\n    top: false,\r\n    bottom: false,\r\n    direction: null,\r\n    underflow: 'center'\r\n}\r\n\r\nexport class Clamp extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {ClampOptions} [options]\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, clampOptions, options)\r\n        if (this.options.direction)\r\n        {\r\n            this.options.left = this.options.direction === 'x' || this.options.direction === 'all' ? true : null\r\n            this.options.right = this.options.direction === 'x' || this.options.direction === 'all' ? true : null\r\n            this.options.top = this.options.direction === 'y' || this.options.direction === 'all' ? true : null\r\n            this.options.bottom = this.options.direction === 'y' || this.options.direction === 'all' ? true : null\r\n        }\r\n        this.parseUnderflow()\r\n        this.update()\r\n    }\r\n\r\n    parseUnderflow()\r\n    {\r\n        const clamp = this.options.underflow.toLowerCase()\r\n        if (clamp === 'none')\r\n        {\r\n            this.noUnderflow = true\r\n        }\r\n        else if (clamp === 'center')\r\n        {\r\n            this.underflowX = this.underflowY = 0\r\n            this.noUnderflow = false\r\n        }\r\n        else\r\n        {\r\n            this.underflowX = (clamp.indexOf('left') !== -1) ? -1 : (clamp.indexOf('right') !== -1) ? 1 : 0\r\n            this.underflowY = (clamp.indexOf('top') !== -1) ? -1 : (clamp.indexOf('bottom') !== -1) ? 1 : 0\r\n            this.noUnderflow = false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * handle move events\r\n     * @param {PIXI.interaction.InteractionEvent} event\r\n     * @returns {boolean}\r\n     */\r\n    move()\r\n    {\r\n        this.update()\r\n        return false\r\n    }\r\n\r\n    update()\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n        const original = { x: this.parent.x, y: this.parent.y }\r\n        const decelerate = this.parent.plugins['decelerate'] || {}\r\n        if (this.options.left !== null || this.options.right !== null)\r\n        {\r\n            let moved = false\r\n            if (this.parent.screenWorldWidth < this.parent.screenWidth)\r\n            {\r\n                if (!this.noUnderflow)\r\n                {\r\n                    switch (this.underflowX)\r\n                    {\r\n                        case -1:\r\n                            if (this.parent.x !== 0)\r\n                            {\r\n                                this.parent.x = 0\r\n                                moved = true\r\n                            }\r\n                            break\r\n                        case 1:\r\n                            if (this.parent.x !== this.parent.screenWidth - this.parent.screenWorldWidth)\r\n                            {\r\n                                this.parent.x = this.parent.screenWidth - this.parent.screenWorldWidth\r\n                                moved = true\r\n                            }\r\n                            break\r\n                        default:\r\n                            if (this.parent.x !== (this.parent.screenWidth - this.parent.screenWorldWidth) / 2)\r\n                            {\r\n                                this.parent.x = (this.parent.screenWidth - this.parent.screenWorldWidth) / 2\r\n                                moved = true\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this.options.left !== null)\r\n                {\r\n                    if (this.parent.left < (this.options.left === true ? 0 : this.options.left))\r\n                    {\r\n                        this.parent.x = -(this.options.left === true ? 0 : this.options.left) * this.parent.scale.x\r\n                        decelerate.x = 0\r\n                        moved = true\r\n                    }\r\n                }\r\n                if (this.options.right !== null)\r\n                {\r\n                    if (this.parent.right > (this.options.right === true ? this.parent.worldWidth : this.options.right))\r\n                    {\r\n                        this.parent.x = -(this.options.right === true ? this.parent.worldWidth : this.options.right) * this.parent.scale.x + this.parent.screenWidth\r\n                        decelerate.x = 0\r\n                        moved = true\r\n                    }\r\n                }\r\n            }\r\n            if (moved)\r\n            {\r\n                this.parent.emit('moved', { viewport: this.parent, original, type: 'clamp-x' })\r\n            }\r\n        }\r\n        if (this.options.top !== null || this.options.bottom !== null)\r\n        {\r\n            let moved = false\r\n            if (this.parent.screenWorldHeight < this.parent.screenHeight)\r\n            {\r\n                if (!this.noUnderflow)\r\n                {\r\n                    switch (this.underflowY)\r\n                    {\r\n                        case -1:\r\n                            if (this.parent.y !== 0)\r\n                            {\r\n                                this.parent.y = 0\r\n                                moved = true\r\n                            }\r\n                            break\r\n                        case 1:\r\n                            if (this.parent.y !== this.parent.screenHeight - this.parent.screenWorldHeight)\r\n                            {\r\n                                this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight)\r\n                                moved = true\r\n                            }\r\n                            break\r\n                        default:\r\n                            if (this.parent.y !== (this.parent.screenHeight - this.parent.screenWorldHeight) / 2)\r\n                            {\r\n                                this.parent.y = (this.parent.screenHeight - this.parent.screenWorldHeight) / 2\r\n                                moved = true\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this.options.top !== null)\r\n                {\r\n                    if (this.parent.top < (this.options.top === true ? 0 : this.options.top))\r\n                    {\r\n                        this.parent.y = -(this.options.top === true ? 0 : this.options.top) * this.parent.scale.y\r\n                        decelerate.y = 0\r\n                        moved = true\r\n                    }\r\n                }\r\n                if (this.options.bottom !== null)\r\n                {\r\n                    if (this.parent.bottom > (this.options.bottom === true ? this.parent.worldHeight : this.options.bottom))\r\n                    {\r\n                        this.parent.y = -(this.options.bottom === true ? this.parent.worldHeight : this.options.bottom) * this.parent.scale.y + this.parent.screenHeight\r\n                        decelerate.y = 0\r\n                        moved = true\r\n                    }\r\n                }\r\n            }\r\n            if (moved)\r\n            {\r\n                this.parent.emit('moved', { viewport: this.parent, original, type: 'clamp-y' })\r\n            }\r\n        }\r\n    }\r\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef {object} ClampZoomOptions\r\n * @property {number} [minWidth] minimum width\r\n * @property {number} [minHeight] minimum height\r\n * @property {number} [maxWidth] maximum width\r\n * @property {number} [maxHeight] maximum height\r\n */\r\n\r\nconst clampZoomOptions = {\r\n    minWidth: null,\r\n    minHeight: null,\r\n    maxWidth: null,\r\n    maxHeight: null\r\n}\r\n\r\nexport class ClampZoom extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {ClampZoomOptions} [options]\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, clampZoomOptions, options)\r\n        this.clamp()\r\n    }\r\n\r\n    resize()\r\n    {\r\n        this.clamp()\r\n    }\r\n\r\n    clamp()\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        let width = this.parent.worldScreenWidth\r\n        let height = this.parent.worldScreenHeight\r\n        if (this.options.minWidth !== null && width < this.options.minWidth)\r\n        {\r\n            const original = this.parent.scale.x\r\n            this.parent.fitWidth(this.options.minWidth, false, false, true)\r\n            this.parent.scale.y *= this.parent.scale.x / original\r\n            width = this.parent.worldScreenWidth\r\n            height = this.parent.worldScreenHeight\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' })\r\n        }\r\n        if (this.options.maxWidth !== null && width > this.options.maxWidth)\r\n        {\r\n            const original = this.parent.scale.x\r\n            this.parent.fitWidth(this.options.maxWidth, false, false, true)\r\n            this.parent.scale.y *= this.parent.scale.x / original\r\n            width = this.parent.worldScreenWidth\r\n            height = this.parent.worldScreenHeight\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' })\r\n        }\r\n        if (this.options.minHeight !== null && height < this.options.minHeight)\r\n        {\r\n            const original = this.parent.scale.y\r\n            this.parent.fitHeight(this.options.minHeight, false, false, true)\r\n            this.parent.scale.x *= this.parent.scale.y / original\r\n            width = this.parent.worldScreenWidth\r\n            height = this.parent.worldScreenHeight\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' })\r\n        }\r\n        if (this.options.maxHeight !== null && height > this.options.maxHeight)\r\n        {\r\n            const original = this.parent.scale.y\r\n            this.parent.fitHeight(this.options.maxHeight, false, false, true)\r\n            this.parent.scale.x *= this.parent.scale.y / original\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'clamp-zoom' })\r\n        }\r\n    }\r\n}\r\n","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef {object} DecelerateOptions\r\n * @property {number} [friction=0.95] percent to decelerate after movement\r\n * @property {number} [bounce=0.8] percent to decelerate when past boundaries (only applicable when viewport.bounce() is active)\r\n * @property {number} [minSpeed=0.01] minimum velocity before stopping/reversing acceleration\r\n */\r\n\r\nconst decelerateOptions = {\r\n    friction: 0.95,\r\n    bounce: 0.8,\r\n    minSpeed: 0.01\r\n}\r\n\r\nexport class Decelerate extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {DecelerateOptions} [options]\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, decelerateOptions, options)\r\n        this.saved = []\r\n        this.reset()\r\n        this.parent.on('moved', data => this.moved(data))\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this.parent\r\n    }\r\n\r\n    down()\r\n    {\r\n        this.saved = []\r\n        this.x = this.y = false\r\n    }\r\n\r\n    isActive()\r\n    {\r\n        return this.x || this.y\r\n    }\r\n\r\n    move()\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        const count = this.parent.input.count()\r\n        if (count === 1 || (count > 1 && !this.parent.plugins.get('pinch')))\r\n        {\r\n            this.saved.push({ x: this.parent.x, y: this.parent.y, time: performance.now() })\r\n            if (this.saved.length > 60)\r\n            {\r\n                this.saved.splice(0, 30)\r\n            }\r\n        }\r\n    }\r\n\r\n    moved(data)\r\n    {\r\n        if (this.saved.length)\r\n        {\r\n            const last = this.saved[this.saved.length - 1]\r\n            if (data.type === 'clamp-x')\r\n            {\r\n                if (last.x === data.original.x)\r\n                {\r\n                    last.x = this.parent.x\r\n                }\r\n            }\r\n            else if (data.type === 'clamp-y')\r\n            {\r\n                if (last.y === data.original.y)\r\n                {\r\n                    last.y = this.parent.y\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    up()\r\n    {\r\n        if (this.parent.input.count() === 0 && this.saved.length)\r\n        {\r\n            const now = performance.now()\r\n            for (let save of this.saved)\r\n            {\r\n                if (save.time >= now - 100)\r\n                {\r\n                    const time = now - save.time\r\n                    this.x = (this.parent.x - save.x) / time\r\n                    this.y = (this.parent.y - save.y) / time\r\n                    this.percentChangeX = this.percentChangeY = this.options.friction\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * manually activate plugin\r\n     * @param {object} options\r\n     * @param {number} [options.x]\r\n     * @param {number} [options.y]\r\n     */\r\n    activate(options)\r\n    {\r\n        options = options || {}\r\n        if (typeof options.x !== 'undefined')\r\n        {\r\n            this.x = options.x\r\n            this.percentChangeX = this.options.friction\r\n        }\r\n        if (typeof options.y !== 'undefined')\r\n        {\r\n            this.y = options.y\r\n            this.percentChangeY = this.options.friction\r\n        }\r\n    }\r\n\r\n    update(elapsed)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        let moved\r\n        if (this.x)\r\n        {\r\n            this.parent.x += this.x * elapsed\r\n            this.x *= this.percentChangeX\r\n            if (Math.abs(this.x) < this.minSpeed)\r\n            {\r\n                this.x = 0\r\n            }\r\n            moved = true\r\n        }\r\n        if (this.y)\r\n        {\r\n            this.parent.y += this.y * elapsed\r\n            this.y *= this.percentChangeY\r\n            if (Math.abs(this.y) < this.minSpeed)\r\n            {\r\n                this.y = 0\r\n            }\r\n            moved = true\r\n        }\r\n        if (moved)\r\n        {\r\n            this.parent.emit('moved', { viewport: this.parent, type: 'decelerate' })\r\n        }\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.x = this.y = null\r\n    }\r\n}","\n/*\n\tCopyright © 2001 Robert Penner\n\tAll rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, \n\tare permitted provided that the following conditions are met:\n\n\tRedistributions of source code must retain the above copyright notice, this list of \n\tconditions and the following disclaimer.\n\tRedistributions in binary form must reproduce the above copyright notice, this list \n\tof conditions and the following disclaimer in the documentation and/or other materials \n\tprovided with the distribution.\n\n\tNeither the name of the author nor the names of contributors may be used to endorse \n\tor promote products derived from this software without specific prior written permission.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \n\tEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n\tMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\n\tCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\tEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n\tGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \n\tAND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n\tNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \n\tOF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n(function() {\n  var penner, umd;\n\n  umd = function(factory) {\n    if (typeof exports === 'object') {\n      return module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n      return define([], factory);\n    } else {\n      return this.penner = factory;\n    }\n  };\n\n  penner = {\n    linear: function(t, b, c, d) {\n      return c * t / d + b;\n    },\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    easeInOutQuad: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t + b;\n      } else {\n        return -c / 2 * ((--t) * (t - 2) - 1) + b;\n      }\n    },\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOutCubic: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t + 1) + b;\n    },\n    easeInOutCubic: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t + b;\n      } else {\n        return c / 2 * ((t -= 2) * t * t + 2) + b;\n      }\n    },\n    easeInQuart: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t + b;\n    },\n    easeOutQuart: function(t, b, c, d) {\n      return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n    },\n    easeInOutQuart: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t + b;\n      } else {\n        return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n      }\n    },\n    easeInQuint: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    easeOutQuint: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    easeInOutQuint: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t * t + b;\n      } else {\n        return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n      }\n    },\n    easeInSine: function(t, b, c, d) {\n      return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n    },\n    easeOutSine: function(t, b, c, d) {\n      return c * Math.sin(t / d * (Math.PI / 2)) + b;\n    },\n    easeInOutSine: function(t, b, c, d) {\n      return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n    },\n    easeInExpo: function(t, b, c, d) {\n      if (t === 0) {\n        return b;\n      } else {\n        return c * Math.pow(2, 10 * (t / d - 1)) + b;\n      }\n    },\n    easeOutExpo: function(t, b, c, d) {\n      if (t === d) {\n        return b + c;\n      } else {\n        return c * (-Math.pow(2, -10 * t / d) + 1) + b;\n      }\n    },\n    easeInOutExpo: function(t, b, c, d) {\n      if (t === 0) {\n        b;\n      }\n      if (t === d) {\n        b + c;\n      }\n      if ((t /= d / 2) < 1) {\n        return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n      } else {\n        return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n      }\n    },\n    easeInCirc: function(t, b, c, d) {\n      return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n    },\n    easeOutCirc: function(t, b, c, d) {\n      return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n    },\n    easeInOutCirc: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n      } else {\n        return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n      }\n    },\n    easeInElastic: function(t, b, c, d) {\n      var a, p, s;\n      s = 1.70158;\n      p = 0;\n      a = c;\n      if (t === 0) {\n        b;\n      } else if ((t /= d) === 1) {\n        b + c;\n      }\n      if (!p) {\n        p = d * .3;\n      }\n      if (a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n    },\n    easeOutElastic: function(t, b, c, d) {\n      var a, p, s;\n      s = 1.70158;\n      p = 0;\n      a = c;\n      if (t === 0) {\n        b;\n      } else if ((t /= d) === 1) {\n        b + c;\n      }\n      if (!p) {\n        p = d * .3;\n      }\n      if (a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) + c + b;\n    },\n    easeInOutElastic: function(t, b, c, d) {\n      var a, p, s;\n      s = 1.70158;\n      p = 0;\n      a = c;\n      if (t === 0) {\n        b;\n      } else if ((t /= d / 2) === 2) {\n        b + c;\n      }\n      if (!p) {\n        p = d * (.3 * 1.5);\n      }\n      if (a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      if (t < 1) {\n        return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p)) + b;\n      } else {\n        return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * (2 * Math.PI) / p) * .5 + c + b;\n      }\n    },\n    easeInBack: function(t, b, c, d, s) {\n      if (s === void 0) {\n        s = 1.70158;\n      }\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    easeOutBack: function(t, b, c, d, s) {\n      if (s === void 0) {\n        s = 1.70158;\n      }\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    easeInOutBack: function(t, b, c, d, s) {\n      if (s === void 0) {\n        s = 1.70158;\n      }\n      if ((t /= d / 2) < 1) {\n        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      } else {\n        return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n      }\n    },\n    easeInBounce: function(t, b, c, d) {\n      var v;\n      v = penner.easeOutBounce(d - t, 0, c, d);\n      return c - v + b;\n    },\n    easeOutBounce: function(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + .75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + .9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + .984375) + b;\n      }\n    },\n    easeInOutBounce: function(t, b, c, d) {\n      var v;\n      if (t < d / 2) {\n        v = penner.easeInBounce(t * 2, 0, c, d);\n        return v * .5 + b;\n      } else {\n        v = penner.easeOutBounce(t * 2 - d, 0, c, d);\n        return v * .5 + c * .5 + b;\n      }\n    }\n  };\n\n  umd(penner);\n\n}).call(this);\n","import Penner from 'penner'\r\n\r\n/**\r\n * returns correct Penner equation using string or Function\r\n * @param {(function|string)} [ease]\r\n * @param {defaults} default penner equation to use if none is provided\r\n */\r\nexport default function ease(ease, defaults)\r\n{\r\n    if (!ease)\r\n    {\r\n        return Penner[defaults]\r\n    }\r\n    else if (typeof ease === 'function')\r\n    {\r\n        return ease\r\n    }\r\n    else if (typeof ease === 'string')\r\n    {\r\n        return Penner[ease]\r\n    }\r\n}","import { Plugin } from './plugin'\r\nimport ease from '../ease'\r\n\r\n/**\r\n * @typedef {options} BounceOptions\r\n * @property {string} [sides=all] all, horizontal, vertical, or combination of top, bottom, right, left (e.g., 'top-bottom-right')\r\n * @property {number} [friction=0.5] friction to apply to decelerate if active\r\n * @property {number} [time=150] time in ms to finish bounce\r\n * @property {string|function} [ease=easeInOutSine] ease function or name (see http://easings.net/ for supported names)\r\n * @property {string} [underflow=center] (top/bottom/center and left/right/center, or center) where to place world if too small for screen\r\n */\r\n\r\nconst bounceOptions = {\r\n    sides: 'all',\r\n    friction: 0.5,\r\n    time: 150,\r\n    ease: 'easeInOutSine',\r\n    underflow: 'center'\r\n}\r\n\r\nexport class Bounce extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {BounceOptions} [options]\r\n     * @fires bounce-start-x\r\n     * @fires bounce.end-x\r\n     * @fires bounce-start-y\r\n     * @fires bounce-end-y\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, bounceOptions, options)\r\n        this.ease = ease(this.options.ease, 'easeInOutSine')\r\n        if (this.options.sides)\r\n        {\r\n            if (this.options.sides === 'all')\r\n            {\r\n                this.top = this.bottom = this.left = this.right = true\r\n            }\r\n            else if (this.options.sides === 'horizontal')\r\n            {\r\n                this.right = this.left = true\r\n            }\r\n            else if (this.options.sides === 'vertical')\r\n            {\r\n                this.top = this.bottom = true\r\n            }\r\n            else\r\n            {\r\n                this.top = this.options.sides.indexOf('top') !== -1\r\n                this.bottom = this.options.sides.indexOf('bottom') !== -1\r\n                this.left = this.options.sides.indexOf('left') !== -1\r\n                this.right = this.options.sides.indexOf('right') !== -1\r\n            }\r\n        }\r\n        this.parseUnderflow()\r\n        this.last = {}\r\n        this.reset()\r\n    }\r\n\r\n    parseUnderflow()\r\n    {\r\n        const clamp = this.options.underflow.toLowerCase()\r\n        if (clamp === 'center')\r\n        {\r\n            this.underflowX = 0\r\n            this.underflowY = 0\r\n        }\r\n        else\r\n        {\r\n            this.underflowX = (clamp.indexOf('left') !== -1) ? -1 : (clamp.indexOf('right') !== -1) ? 1 : 0\r\n            this.underflowY = (clamp.indexOf('top') !== -1) ? -1 : (clamp.indexOf('bottom') !== -1) ? 1 : 0\r\n        }\r\n    }\r\n\r\n    isActive()\r\n    {\r\n        return this.toX !== null || this.toY !== null\r\n    }\r\n\r\n    down()\r\n    {\r\n        this.toX = this.toY = null\r\n    }\r\n\r\n    up()\r\n    {\r\n        this.bounce()\r\n    }\r\n\r\n    update(elapsed)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        this.bounce()\r\n        if (this.toX)\r\n        {\r\n            const toX = this.toX\r\n            toX.time += elapsed\r\n            this.parent.emit('moved', { viewport: this.parent, type: 'bounce-x' })\r\n            if (toX.time >= this.options.time)\r\n            {\r\n                this.parent.x = toX.end\r\n                this.toX = null\r\n                this.parent.emit('bounce-x-end', this.parent)\r\n            }\r\n            else\r\n            {\r\n                this.parent.x = this.ease(toX.time, toX.start, toX.delta, this.options.time)\r\n            }\r\n        }\r\n        if (this.toY)\r\n        {\r\n            const toY = this.toY\r\n            toY.time += elapsed\r\n            this.parent.emit('moved', { viewport: this.parent, type: 'bounce-y' })\r\n            if (toY.time >= this.options.time)\r\n            {\r\n                this.parent.y = toY.end\r\n                this.toY = null\r\n                this.parent.emit('bounce-y-end', this.parent)\r\n            }\r\n            else\r\n            {\r\n                this.parent.y = this.ease(toY.time, toY.start, toY.delta, this.options.time)\r\n            }\r\n        }\r\n    }\r\n\r\n    calcUnderflowX()\r\n    {\r\n        let x\r\n        switch (this.underflowX)\r\n        {\r\n            case -1:\r\n                x = 0\r\n                break\r\n            case 1:\r\n                x = (this.parent.screenWidth - this.parent.screenWorldWidth)\r\n                break\r\n            default:\r\n                x = (this.parent.screenWidth - this.parent.screenWorldWidth) / 2\r\n        }\r\n        return x\r\n    }\r\n\r\n    calcUnderflowY()\r\n    {\r\n        let y\r\n        switch (this.underflowY)\r\n        {\r\n            case -1:\r\n                y = 0\r\n                break\r\n            case 1:\r\n                y = (this.parent.screenHeight - this.parent.screenWorldHeight)\r\n                break\r\n            default:\r\n                y = (this.parent.screenHeight - this.parent.screenWorldHeight) / 2\r\n        }\r\n        return y\r\n    }\r\n\r\n    bounce()\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        let oob\r\n        let decelerate = this.parent.plugins.get('decelerate')\r\n        if (decelerate && (decelerate.x || decelerate.y))\r\n        {\r\n            if ((decelerate.x && decelerate.percentChangeX === decelerate.options.friction) || (decelerate.y && decelerate.percentChangeY === decelerate.options.friction))\r\n            {\r\n                oob = this.parent.OOB()\r\n                if ((oob.left && this.left) || (oob.right && this.right))\r\n                {\r\n                    decelerate.percentChangeX = this.options.friction\r\n                }\r\n                if ((oob.top && this.top) || (oob.bottom && this.bottom))\r\n                {\r\n                    decelerate.percentChangeY = this.options.friction\r\n                }\r\n            }\r\n        }\r\n        const drag = this.parent.plugins.get('drag') || {}\r\n        const pinch = this.parent.plugins.get('pinch') || {}\r\n        decelerate = decelerate || {}\r\n        if (!drag.active && !pinch.active && ((!this.toX || !this.toY) && (!decelerate.x || !decelerate.y)))\r\n        {\r\n            oob = oob || this.parent.OOB()\r\n            const point = oob.cornerPoint\r\n            if (!this.toX && !decelerate.x)\r\n            {\r\n                let x = null\r\n                if (oob.left && this.left)\r\n                {\r\n                    x = (this.parent.screenWorldWidth < this.parent.screenWidth) ? this.calcUnderflowX() : 0\r\n                }\r\n                else if (oob.right && this.right)\r\n                {\r\n                    x = (this.parent.screenWorldWidth < this.parent.screenWidth) ? this.calcUnderflowX() : -point.x\r\n                }\r\n                if (x !== null && this.parent.x !== x)\r\n                {\r\n                    this.toX = { time: 0, start: this.parent.x, delta: x - this.parent.x, end: x }\r\n                    this.parent.emit('bounce-x-start', this.parent)\r\n                }\r\n            }\r\n            if (!this.toY && !decelerate.y)\r\n            {\r\n                let y = null\r\n                if (oob.top && this.top)\r\n                {\r\n                    y = (this.parent.screenWorldHeight < this.parent.screenHeight) ? this.calcUnderflowY() : 0\r\n                }\r\n                else if (oob.bottom && this.bottom)\r\n                {\r\n                    y = (this.parent.screenWorldHeight < this.parent.screenHeight) ? this.calcUnderflowY() : -point.y\r\n                }\r\n                if (y !== null && this.parent.y !== y)\r\n                {\r\n                    this.toY = { time: 0, start: this.parent.y, delta: y - this.parent.y, end: y }\r\n                    this.parent.emit('bounce-y-start', this.parent)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.toX = this.toY = null\r\n    }\r\n}","import { Plugin } from './plugin'\r\nimport ease from '../ease'\r\n\r\n/**\r\n * @typedef SnapOptions\r\n * @property {boolean} [topLeft] snap to the top-left of viewport instead of center\r\n * @property {number} [friction=0.8] friction/frame to apply if decelerate is active\r\n * @property {number} [time=1000]\r\n * @property {string|function} [ease=easeInOutSine] ease function or name (see http://easings.net/ for supported names)\r\n * @property {boolean} [interrupt=true] pause snapping with any user input on the viewport\r\n * @property {boolean} [removeOnComplete] removes this plugin after snapping is complete\r\n * @property {boolean} [removeOnInterrupt] removes this plugin if interrupted by any user input\r\n * @property {boolean} [forceStart] starts the snap immediately regardless of whether the viewport is at the desired location\r\n */\r\n\r\nconst snapOptions = {\r\n    topLeft: false,\r\n    friction: 0.8,\r\n    time: 1000,\r\n    ease: 'easeInOutSine',\r\n    interrupt: true,\r\n    removeOnComplete: false,\r\n    removeOnInterrupt: false,\r\n    forceStart: false\r\n}\r\n\r\nexport class Snap extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {SnapOptions} [options]\r\n     * @event snap-start(Viewport) emitted each time a snap animation starts\r\n     * @event snap-restart(Viewport) emitted each time a snap resets because of a change in viewport size\r\n     * @event snap-end(Viewport) emitted each time snap reaches its target\r\n     * @event snap-remove(Viewport) emitted if snap plugin is removed\r\n     */\r\n    constructor(parent, x, y, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, snapOptions, options)\r\n        this.ease = ease(options.ease, 'easeInOutSine')\r\n        this.x = x\r\n        this.y = y\r\n        if (this.options.forceStart)\r\n        {\r\n            this.startEase()\r\n        }\r\n    }\r\n\r\n    snapStart()\r\n    {\r\n        this.percent = 0\r\n        this.snapping = { time: 0 }\r\n        const current = this.options.topLeft ? this.parent.corner : this.parent.center\r\n        this.deltaX = this.x - current.x\r\n        this.deltaY = this.y - current.y\r\n        this.startX = current.x\r\n        this.startY = current.y\r\n        this.parent.emit('snap-start', this.parent)\r\n    }\r\n\r\n    wheel()\r\n    {\r\n        if (this.options.removeOnInterrupt)\r\n        {\r\n            this.parent.plugins.remove('snap')\r\n        }\r\n    }\r\n\r\n    down()\r\n    {\r\n        if (this.options.removeOnInterrupt)\r\n        {\r\n            this.parent.plugins.remove('snap')\r\n        }\r\n        else if (this.options.interrupt)\r\n        {\r\n            this.snapping = null\r\n        }\r\n    }\r\n\r\n    up()\r\n    {\r\n        if (this.parent.input.count() === 0)\r\n        {\r\n            const decelerate = this.parent.plugins.get('decelerate')\r\n            if (decelerate && (decelerate.x || decelerate.y))\r\n            {\r\n                decelerate.percentChangeX = decelerate.percentChangeY = this.options.friction\r\n            }\r\n        }\r\n    }\r\n\r\n    update(elapsed)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n        if (this.options.interrupt && this.parent.input.count() !== 0)\r\n        {\r\n            return\r\n        }\r\n        if (!this.snapping)\r\n        {\r\n            const current = this.options.topLeft ? this.parent.corner : this.parent.center\r\n            if (current.x !== this.x || current.y !== this.y)\r\n            {\r\n                this.snapStart()\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const snapping = this.snapping\r\n            snapping.time += elapsed\r\n            let finished, x, y\r\n            if (snapping.time > this.options.time)\r\n            {\r\n                finished = true\r\n                x = this.startX + this.deltaX\r\n                y = this.startY + this.deltaY\r\n            }\r\n            else\r\n            {\r\n                const percent = this.ease(snapping.time, 0, 1, this.options.time)\r\n                x = this.startX + this.deltaX * percent\r\n                y = this.startY + this.deltaY * percent\r\n            }\r\n            if (this.options.topLeft)\r\n            {\r\n                this.parent.moveCorner(x, y)\r\n            }\r\n            else\r\n            {\r\n                this.parent.moveCenter(x, y)\r\n            }\r\n            this.parent.emit('moved', { viewport: this.parent, type: 'snap' })\r\n            if (finished)\r\n            {\r\n                if (this.options.removeOnComplete)\r\n                {\r\n                    this.parent.plugins.remove('snap')\r\n                }\r\n                this.parent.emit('snap-end', this.parent)\r\n                this.snapping = null\r\n            }\r\n        }\r\n    }\r\n}","import { Plugin } from './plugin'\r\nimport ease from '../ease'\r\n\r\n/**\r\n * @typedef {Object} SnapZoomOptions\r\n * @property {number} [width=0] the desired width to snap (to maintain aspect ratio, choose only width or height)\r\n * @property {number} [height=0] the desired height to snap (to maintain aspect ratio, choose only width or height)\r\n * @property {number} [time=1000] time for snapping in ms\r\n * @property {(string|function)} [ease=easeInOutSine] ease function or name (see http://easings.net/ for supported names)\r\n * @property {PIXI.Point} [center] place this point at center during zoom instead of center of the viewport\r\n * @property {boolean} [interrupt=true] pause snapping with any user input on the viewport\r\n * @property {boolean} [removeOnComplete] removes this plugin after snapping is complete\r\n * @property {boolean} [removeOnInterrupt] removes this plugin if interrupted by any user input\r\n * @property {boolean} [forceStart] starts the snap immediately regardless of whether the viewport is at the desired zoom\r\n * @property {boolean} [noMove] zoom but do not move\r\n */\r\n\r\nconst snapZoomOptions = {\r\n    width: 0,\r\n    height: 0,\r\n    time: 1000,\r\n    ease: 'easeInOutSine',\r\n    center: null,\r\n    interrupt: true,\r\n    removeOnComplete: false,\r\n    removeOnInterrupts: false,\r\n    forceStart: false,\r\n    noMove: false\r\n}\r\nexport class SnapZoom extends Plugin\r\n{\r\n    /**\r\n     * @param {Viewport} parent\r\n     * @param {SnapZoomOptions} options\r\n     * @event snap-zoom-start(Viewport) emitted each time a fit animation starts\r\n     * @event snap-zoom-end(Viewport) emitted each time fit reaches its target\r\n     * @event snap-zoom-end(Viewport) emitted each time fit reaches its target\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, snapZoomOptions, options)\r\n        if (this.options.width > 0)\r\n        {\r\n            this.x_scale = parent.screenWidth / this.options.width\r\n        }\r\n        if (this.options.height > 0)\r\n        {\r\n            this.y_scale = parent.screenHeight / this.options.height\r\n        }\r\n        this.xIndependent = this.x_scale ? true : false\r\n        this.yIndependent = this.y_scale ? true : false\r\n        this.x_scale = this.xIndependent ? this.x_scale : this.y_scale\r\n        this.y_scale = this.yIndependent ? this.y_scale : this.x_scale\r\n\r\n        if (this.options.time === 0)\r\n        {\r\n            parent.container.scale.x = this.x_scale\r\n            parent.container.scale.y = this.y_scale\r\n            if (this.options.removeOnComplete)\r\n            {\r\n                this.parent.plugins.remove('snap-zoom')\r\n            }\r\n        }\r\n        else if (options.forceStart)\r\n        {\r\n            this.createSnapping()\r\n        }\r\n    }\r\n\r\n    createSnapping()\r\n    {\r\n        const scale = this.parent.scale\r\n        this.snapping = { time: 0, startX: scale.x, startY: scale.y, deltaX: this.x_scale - scale.x, deltaY: this.y_scale - scale.y }\r\n        this.parent.emit('snap-zoom-start', this.parent)\r\n    }\r\n\r\n    resize()\r\n    {\r\n        this.snapping = null\r\n\r\n        if (this.options.width > 0)\r\n        {\r\n            this.x_scale = this.parent._screenWidth / this.options.width\r\n        }\r\n        if (this.options.height > 0)\r\n        {\r\n            this.y_scale = this.parent._screenHeight / this.options.height\r\n        }\r\n        this.x_scale = this.xIndependent ? this.x_scale : this.y_scale\r\n        this.y_scale = this.yIndependent ? this.y_scale : this.x_scale\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.snapping = null\r\n    }\r\n\r\n    wheel()\r\n    {\r\n        if (this.options.removeOnInterrupt)\r\n        {\r\n            this.parent.plugins.remove('snap-zoom')\r\n        }\r\n    }\r\n\r\n    down()\r\n    {\r\n        if (this.options.removeOnInterrupt)\r\n        {\r\n            this.parent.plugins.remove('snap-zoom')\r\n        }\r\n        else if (this.options.interrupt)\r\n        {\r\n            this.snapping = null\r\n        }\r\n    }\r\n\r\n    update(elapsed)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n        if (this.options.interrupt && this.parent.input.count() !== 0)\r\n        {\r\n            return\r\n        }\r\n\r\n        let oldCenter\r\n        if (!this.options.center && !this.options.noMove)\r\n        {\r\n            oldCenter = this.parent.center\r\n        }\r\n        if (!this.snapping)\r\n        {\r\n            if (this.parent.scale.x !== this.x_scale || this.parent.scale.y !== this.y_scale)\r\n            {\r\n                this.createSnapping()\r\n            }\r\n        }\r\n        else if (this.snapping)\r\n        {\r\n            const snapping = this.snapping\r\n            snapping.time += elapsed\r\n            if (snapping.time >= this.options.time)\r\n            {\r\n                this.parent.scale.set(this.x_scale, this.y_scale)\r\n                if (this.options.removeOnComplete)\r\n                {\r\n                    this.parent.plugins.remove('snap-zoom')\r\n                }\r\n                this.parent.emit('snap-zoom-end', this.parent)\r\n                this.snapping = null\r\n            }\r\n            else\r\n            {\r\n                const snapping = this.snapping\r\n                this.parent.scale.x = ease(snapping.time, snapping.startX, snapping.deltaX, this.options.time)\r\n                this.parent.scale.y = ease(snapping.time, snapping.startY, snapping.deltaY, this.options.time)\r\n            }\r\n            const clamp = this.parent.plugins.get('clamp-zoom')\r\n            if (clamp)\r\n            {\r\n                clamp.clamp()\r\n            }\r\n            if (!this.options.noMove)\r\n            {\r\n                if (!this.options.center)\r\n                {\r\n                    this.parent.moveCenter(oldCenter)\r\n                }\r\n                else\r\n                {\r\n                    this.parent.moveCenter(this.options.center)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    resume()\r\n    {\r\n        this.snapping = null\r\n        super.resume()\r\n    }\r\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef {object} FollowOptions\r\n * @property {number} [speed=0] to follow in pixels/frame (0=teleport to location)\r\n * @property {number} [acceleration] set acceleration to accelerate and decelerate at this rate; speed cannot be 0 to use acceleration\r\n * @property {number} [radius] radius (in world coordinates) of center circle where movement is allowed without moving the viewport\r\n */\r\n\r\nconst followOptions = {\r\n    speed: 0,\r\n    acceleration: null,\r\n    radius: null\r\n}\r\n\r\nexport class Follow extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {PIXI.DisplayObject} target to follow\r\n     * @param {FollowOptions} [options]\r\n     */\r\n    constructor(parent, target, options = {})\r\n    {\r\n        super(parent)\r\n        this.target = target\r\n        this.options = Object.assign({}, followOptions, options)\r\n        this.velocity = { x: 0, y: 0 }\r\n    }\r\n\r\n    update(elapsed)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        const center = this.parent.center\r\n        let toX = this.target.x,\r\n            toY = this.target.y\r\n        if (this.options.radius)\r\n        {\r\n            const distance = Math.sqrt(Math.pow(this.target.y - center.y, 2) + Math.pow(this.target.x - center.x, 2))\r\n            if (distance > this.options.radius)\r\n            {\r\n                const angle = Math.atan2(this.target.y - center.y, this.target.x - center.x)\r\n                toX = this.target.x - Math.cos(angle) * this.options.radius\r\n                toY = this.target.y - Math.sin(angle) * this.options.radius\r\n            }\r\n            else\r\n            {\r\n                return\r\n            }\r\n        }\r\n        const deltaX = toX - center.x\r\n        const deltaY = toY - center.y\r\n        if (deltaX || deltaY)\r\n        {\r\n            if (this.options.speed)\r\n            {\r\n                if (this.options.acceleration)\r\n                {\r\n                    const angle = Math.atan2(toY - center.y, toX - center.x)\r\n                    const distance = Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2))\r\n                    if (distance)\r\n                    {\r\n                        const decelerationDistance = (Math.pow(this.velocity.x, 2) + Math.pow(this.velocity.y, 2)) / (2 * this.options.acceleration)\r\n                        if (distance > decelerationDistance)\r\n                        {\r\n                            this.velocity = {\r\n                                x: Math.min(this.velocity.x + this.options.acceleration * elapsed, this.options.speed),\r\n                                y: Math.min(this.velocity.y + this.options.acceleration * elapsed, this.options.speed)\r\n                            }\r\n                        }\r\n                        else\r\n                        {\r\n                            this.velocity = {\r\n                                x: Math.max(this.velocity.x - this.options.acceleration * this.options.speed, 0),\r\n                                y: Math.max(this.velocity.y - this.options.acceleration * this.options.speed, 0)\r\n                            }\r\n                        }\r\n                        const changeX = Math.cos(angle) * this.velocity.x\r\n                        const changeY = Math.sin(angle) * this.velocity.y\r\n                        const x = Math.abs(changeX) > Math.abs(deltaX) ? toX : center.x + changeX\r\n                        const y = Math.abs(changeY) > Math.abs(deltaY) ? toY : center.y + changeY\r\n                        this.parent.moveCenter(x, y)\r\n                        this.parent.emit('moved', { viewport: this.parent, type: 'follow' })\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    const angle = Math.atan2(toY - center.y, toX - center.x)\r\n                    const changeX = Math.cos(angle) * this.options.speed\r\n                    const changeY = Math.sin(angle) * this.options.speed\r\n                    const x = Math.abs(changeX) > Math.abs(deltaX) ? toX : center.x + changeX\r\n                    const y = Math.abs(changeY) > Math.abs(deltaY) ? toY : center.y + changeY\r\n                    this.parent.moveCenter(x, y)\r\n                    this.parent.emit('moved', { viewport: this.parent, type: 'follow' })\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.parent.moveCenter(toX, toY)\r\n                this.parent.emit('moved', { viewport: this.parent, type: 'follow' })\r\n            }\r\n        }\r\n    }\r\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef WheelOptions\r\n * @property {number} [percent=0.1] percent to scroll with each spin\r\n * @property {number} [smooth] smooth the zooming by providing the number of frames to zoom between wheel spins\r\n * @property {boolean} [interrupt=true] stop smoothing with any user input on the viewport\r\n * @property {boolean} [reverse] reverse the direction of the scroll\r\n * @property {PIXI.Point} [center] place this point at center during zoom instead of current mouse position\r\n */\r\n\r\nconst wheelOptions = {\r\n    percent: 0.1,\r\n    smooth: false,\r\n    interrupt: true,\r\n    reverse: false,\r\n    center: null\r\n}\r\n\r\nexport class Wheel extends Plugin\r\n{\r\n    /**\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {WheelOptions} [options]\r\n     * @event wheel({wheel: {dx, dy, dz}, event, viewport})\r\n     */\r\n    constructor(parent, options = {})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, wheelOptions, options)\r\n    }\r\n\r\n    down()\r\n    {\r\n        if (this.options.interrupt)\r\n        {\r\n            this.smoothing = null\r\n        }\r\n    }\r\n\r\n    update()\r\n    {\r\n        if (this.smoothing)\r\n        {\r\n            const point = this.smoothingCenter\r\n            const change = this.smoothing\r\n            let oldPoint\r\n            if (!this.options.center)\r\n            {\r\n                oldPoint = this.parent.toLocal(point)\r\n            }\r\n            this.parent.scale.x += change.x\r\n            this.parent.scale.y += change.y\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'wheel' })\r\n            const clamp = this.parent.plugins.get('clamp-zoom')\r\n            if (clamp)\r\n            {\r\n                clamp.clamp()\r\n            }\r\n            if (this.options.center)\r\n            {\r\n                this.parent.moveCenter(this.options.center)\r\n            }\r\n            else\r\n            {\r\n                const newPoint = this.parent.toGlobal(oldPoint)\r\n                this.parent.x += point.x - newPoint.x\r\n                this.parent.y += point.y - newPoint.y\r\n            }\r\n            this.smoothingCount++\r\n            if (this.smoothingCount >= this.options.smooth)\r\n            {\r\n                this.smoothing = null\r\n            }\r\n        }\r\n    }\r\n\r\n    wheel(e)\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        let point = this.parent.input.getPointerPosition(e)\r\n        const sign = this.options.reverse ? -1 : 1\r\n        const step = sign * -e.deltaY * (e.deltaMode ? 120 : 1) / 500\r\n        const change = Math.pow(2, (1 + this.options.percent) * step)\r\n        if (this.options.smooth)\r\n        {\r\n            const original = {\r\n                x: this.smoothing ? this.smoothing.x * (this.options.smooth - this.smoothingCount) : 0,\r\n                y: this.smoothing ? this.smoothing.y * (this.options.smooth - this.smoothingCount) : 0\r\n            }\r\n            this.smoothing = {\r\n                x: ((this.parent.scale.x + original.x) * change - this.parent.scale.x) / this.options.smooth,\r\n                y: ((this.parent.scale.y + original.y) * change - this.parent.scale.y) / this.options.smooth\r\n            }\r\n            this.smoothingCount = 0\r\n            this.smoothingCenter = point\r\n        }\r\n        else\r\n        {\r\n            let oldPoint\r\n            if (!this.options.center)\r\n            {\r\n                oldPoint = this.parent.toLocal(point)\r\n            }\r\n            this.parent.scale.x *= change\r\n            this.parent.scale.y *= change\r\n            this.parent.emit('zoomed', { viewport: this.parent, type: 'wheel' })\r\n            const clamp = this.parent.plugins.get('clamp-zoom')\r\n            if (clamp)\r\n            {\r\n                clamp.clamp()\r\n            }\r\n            if (this.options.center)\r\n            {\r\n                this.parent.moveCenter(this.options.center)\r\n            }\r\n            else\r\n            {\r\n                const newPoint = this.parent.toGlobal(oldPoint)\r\n                this.parent.x += point.x - newPoint.x\r\n                this.parent.y += point.y - newPoint.y\r\n            }\r\n        }\r\n        this.parent.emit('moved', { viewport: this.parent, type: 'wheel' })\r\n        this.parent.emit('wheel', { wheel: { dx: e.deltaX, dy: e.deltaY, dz: e.deltaZ }, event: e, viewport: this.parent })\r\n        if (!this.parent.options.passiveWheel)\r\n        {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n}","import { Plugin } from './plugin'\r\n\r\n/**\r\n * @typedef MouseEdgesOptions\r\n * @property {number} [radius] distance from center of screen in screen pixels\r\n * @property {number} [distance] distance from all sides in screen pixels\r\n * @property {number} [top] alternatively, set top distance (leave unset for no top scroll)\r\n * @property {number} [bottom] alternatively, set bottom distance (leave unset for no top scroll)\r\n * @property {number} [left] alternatively, set left distance (leave unset for no top scroll)\r\n * @property {number} [right] alternatively, set right distance (leave unset for no top scroll)\r\n * @property {number} [speed=8] speed in pixels/frame to scroll viewport\r\n * @property {boolean} [reverse] reverse direction of scroll\r\n * @property {boolean} [noDecelerate] don't use decelerate plugin even if it's installed\r\n * @property {boolean} [linear] if using radius, use linear movement (+/- 1, +/- 1) instead of angled movement (Math.cos(angle from center), Math.sin(angle from center))\r\n * @property {boolean} [allowButtons] allows plugin to continue working even when there's a mousedown event\r\n */\r\n\r\nconst mouseEdgesOptions = {\r\n    radius: null,\r\n    distance: null,\r\n    top: null,\r\n    bottom: null,\r\n    left: null,\r\n    right: null,\r\n    speed: 8,\r\n    reverse: false,\r\n    noDecelerate: false,\r\n    linear: false,\r\n    allowButtons: false\r\n}\r\n\r\nexport class MouseEdges extends Plugin\r\n{\r\n    /**\r\n     * Scroll viewport when mouse hovers near one of the edges.\r\n     * @private\r\n     * @param {Viewport} parent\r\n     * @param {MouseEdgeOptions} [options]\r\n     * @event mouse-edge-start(Viewport) emitted when mouse-edge starts\r\n     * @event mouse-edge-end(Viewport) emitted when mouse-edge ends\r\n     */\r\n    constructor(parent, options={})\r\n    {\r\n        super(parent)\r\n        this.options = Object.assign({}, mouseEdgesOptions, options)\r\n        this.reverse = this.options.reverse ? 1 : -1\r\n        this.radiusSquared = Math.pow(this.options.radius, 2)\r\n        this.resize()\r\n    }\r\n\r\n    resize()\r\n    {\r\n        const distance = this.options.distance\r\n        if (distance !== null)\r\n        {\r\n            this.left = distance\r\n            this.top = distance\r\n            this.right = window.innerWidth - distance\r\n            this.bottom = window.innerHeight - distance\r\n        }\r\n        else if (!this.radius)\r\n        {\r\n            this.left = this.options.left\r\n            this.top = this.options.top\r\n            this.right = this.options.right === null ? null : window.innerWidth - this.options.right\r\n            this.bottom = this.options.bottom === null ? null : window.innerHeight - this.options.bottom\r\n        }\r\n    }\r\n\r\n    down()\r\n    {\r\n        if (!this.options.allowButtons)\r\n        {\r\n            this.horizontal = this.vertical = null\r\n        }\r\n    }\r\n\r\n    move(event)\r\n    {\r\n        if ((event.data.pointerType !== 'mouse' && event.data.identifier !== 1) || (!this.options.allowButtons && event.data.buttons !== 0))\r\n        {\r\n            return\r\n        }\r\n        const x = event.data.global.x\r\n        const y = event.data.global.y\r\n\r\n        if (this.radiusSquared)\r\n        {\r\n            const center = this.parent.toScreen(this.parent.center)\r\n            const distance = Math.pow(center.x - x, 2) + Math.pow(center.y - y, 2)\r\n            if (distance >= this.radiusSquared)\r\n            {\r\n                const angle = Math.atan2(center.y - y, center.x - x)\r\n                if (this.options.linear)\r\n                {\r\n                    this.horizontal = Math.round(Math.cos(angle)) * this.options.speed * this.reverse * (60 / 1000)\r\n                    this.vertical = Math.round(Math.sin(angle)) * this.options.speed * this.reverse * (60 / 1000)\r\n                }\r\n                else\r\n                {\r\n                    this.horizontal = Math.cos(angle) * this.options.speed * this.reverse * (60 / 1000)\r\n                    this.vertical = Math.sin(angle) * this.options.speed * this.reverse * (60 / 1000)\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if (this.horizontal)\r\n                {\r\n                    this.decelerateHorizontal()\r\n                }\r\n                if (this.vertical)\r\n                {\r\n                    this.decelerateVertical()\r\n                }\r\n                this.horizontal = this.vertical = 0\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (this.left !== null && x < this.left)\r\n            {\r\n                this.horizontal = 1 * this.reverse * this.options.speed * (60 / 1000)\r\n            }\r\n            else if (this.right !== null && x > this.right)\r\n            {\r\n                this.horizontal = -1 * this.reverse * this.options.speed * (60 / 1000)\r\n            }\r\n            else\r\n            {\r\n                this.decelerateHorizontal()\r\n                this.horizontal = 0\r\n            }\r\n            if (this.top !== null && y < this.top)\r\n            {\r\n                this.vertical = 1 * this.reverse * this.options.speed * (60 / 1000)\r\n            }\r\n            else if (this.bottom !== null && y > this.bottom)\r\n            {\r\n                this.vertical = -1 * this.reverse * this.options.speed * (60 / 1000)\r\n            }\r\n            else\r\n            {\r\n                this.decelerateVertical()\r\n                this.vertical = 0\r\n            }\r\n        }\r\n    }\r\n\r\n    decelerateHorizontal()\r\n    {\r\n        const decelerate = this.parent.plugins.get('decelerate')\r\n        if (this.horizontal && decelerate && !this.options.noDecelerate)\r\n        {\r\n            decelerate.activate({ x: (this.horizontal * this.options.speed * this.reverse) / (1000 / 60) })\r\n        }\r\n    }\r\n\r\n    decelerateVertical()\r\n    {\r\n        const decelerate = this.parent.plugins.get('decelerate')\r\n        if (this.vertical && decelerate && !this.options.noDecelerate)\r\n        {\r\n            decelerate.activate({ y: (this.vertical * this.options.speed * this.reverse) / (1000 / 60)})\r\n        }\r\n    }\r\n\r\n    up()\r\n    {\r\n        if (this.horizontal)\r\n        {\r\n            this.decelerateHorizontal()\r\n        }\r\n        if (this.vertical)\r\n        {\r\n            this.decelerateVertical()\r\n        }\r\n        this.horizontal = this.vertical = null\r\n    }\r\n\r\n    update()\r\n    {\r\n        if (this.paused)\r\n        {\r\n            return\r\n        }\r\n\r\n        if (this.horizontal || this.vertical)\r\n        {\r\n            const center = this.parent.center\r\n            if (this.horizontal)\r\n            {\r\n                center.x += this.horizontal * this.options.speed\r\n            }\r\n            if (this.vertical)\r\n            {\r\n                center.y += this.vertical * this.options.speed\r\n            }\r\n            this.parent.moveCenter(center)\r\n            this.parent.emit('moved', { viewport: this.parent, type: 'mouse-edges' })\r\n        }\r\n    }\r\n}","import * as PIXI from 'pixi.js'\r\n\r\nimport { InputManager } from './input-manager'\r\nimport { PluginManager } from './plugin-manager'\r\nimport { Drag } from './plugins/drag'\r\nimport { Paint } from './plugins/paint'\r\nimport { Pinch } from './plugins/pinch'\r\nimport { Clamp } from './plugins/clamp'\r\nimport { ClampZoom } from './plugins/clamp-zoom'\r\nimport { Decelerate } from './plugins/decelerate'\r\nimport { Bounce } from './plugins/bounce'\r\nimport { Snap } from './plugins/snap'\r\nimport { SnapZoom } from './plugins/snap-zoom'\r\nimport { Follow } from './plugins/follow'\r\nimport { Wheel } from './plugins/wheel'\r\nimport { MouseEdges } from './plugins/mouse-edges'\r\nexport { Plugin } from './plugins/plugin'\r\n\r\n/**\r\n * @typedef {object} ViewportOptions\r\n * @property {number} [screenWidth=window.innerWidth]\r\n * @property {number} [screenHeight=window.innerHeight]\r\n * @property {number} [worldWidth=this.width]\r\n * @property {number} [worldHeight=this.height]\r\n * @property {number} [threshold=5] number of pixels to move to trigger an input event (e.g., drag, pinch) or disable a clicked event\r\n * @property {boolean} [passiveWheel=true] whether the 'wheel' event is set to passive\r\n * @property {boolean} [stopPropagation=false] whether to stopPropagation of events that impact the viewport\r\n * @property {HitArea} [forceHitArea] change the default hitArea from world size to a new value\r\n * @property {boolean} [noTicker] set this if you want to manually call update() function on each frame\r\n * @property {PIXI.Ticker} [ticker=PIXI.Ticker.shared] use this PIXI.ticker for updates\r\n * @property {PIXI.InteractionManager} [interaction=null] InteractionManager, available from instantiated WebGLRenderer/CanvasRenderer.plugins.interaction - used to calculate pointer postion relative to canvas location on screen\r\n * @property {HTMLElement} [divWheel=document.body] div to attach the wheel event\r\n * @property {boolean} [noOnContextMenu] remove oncontextmenu=() => {} from the divWheel element (this is enabled to allow for right-click dragging)\r\n */\r\n\r\nconst viewportOptions = {\r\n    screenWidth: window.innerWidth,\r\n    screenHeight: window.innerHeight,\r\n    worldWidth: null,\r\n    worldHeight: null,\r\n    threshold: 5,\r\n    passiveWheel: true,\r\n    stopPropagation: false,\r\n    forceHitArea: null,\r\n    noTicker: false,\r\n    interaction: null,\r\n    noOnContextMenu: false\r\n}\r\n\r\n/**\r\n * Main class to use when creating a Viewport\r\n */\r\nexport class Viewport extends PIXI.Container\r\n{\r\n    /**\r\n     * @param {ViewportOptions} [options]\r\n     * @fires clicked\r\n     * @fires drag-start\r\n     * @fires drag-end\r\n     * @fires drag-remove\r\n     * @fires paint-start\r\n     * @fires paint-end\r\n     * @fires pinch-start\r\n     * @fires pinch-end\r\n     * @fires pinch-remove\r\n     * @fires snap-start\r\n     * @fires snap-end\r\n     * @fires snap-remove\r\n     * @fires snap-zoom-start\r\n     * @fires snap-zoom-end\r\n     * @fires snap-zoom-remove\r\n     * @fires bounce-x-start\r\n     * @fires bounce-x-end\r\n     * @fires bounce-y-start\r\n     * @fires bounce-y-end\r\n     * @fires bounce-remove\r\n     * @fires wheel\r\n     * @fires wheel-remove\r\n     * @fires wheel-scroll\r\n     * @fires wheel-scroll-remove\r\n     * @fires mouse-edge-start\r\n     * @fires mouse-edge-end\r\n     * @fires mouse-edge-remove\r\n     * @fires moved\r\n     * @fires moved-end\r\n     * @fires zoomed\r\n     * @fires zoomed-end\r\n     */\r\n    constructor(options = {})\r\n    {\r\n        super()\r\n        this.options = Object.assign({}, viewportOptions, options)\r\n\r\n        // needed to pull this out of viewportOptions because of pixi.js v4 support (which changed from PIXI.ticker.shared to PIXI.Ticker.shared...sigh)\r\n        if (options.ticker)\r\n        {\r\n            this.options.ticker = options.ticker\r\n        }\r\n        else\r\n        {\r\n            // to avoid Rollup transforming our import, save pixi namespace in a variable\r\n            // from here: https://github.com/pixijs/pixi.js/issues/5757\r\n            let ticker\r\n            const pixiNS = PIXI\r\n            if (parseInt(/^(\\d+)\\./.exec(PIXI.VERSION)[1]) < 5)\r\n            {\r\n                ticker = pixiNS.ticker.shared;\r\n            }\r\n            else\r\n            {\r\n                ticker = pixiNS.Ticker.shared;\r\n            }\r\n            this.options.ticker = options.ticker || ticker\r\n        }\r\n\r\n        /** @type {number} */\r\n        this.screenWidth = this.options.screenWidth\r\n\r\n        /** @type {number} */\r\n        this.screenHeight = this.options.screenHeight\r\n\r\n        this._worldWidth = this.options.worldWidth\r\n        this._worldHeight = this.options.worldHeight\r\n        this.forceHitArea = this.options.forceHitArea\r\n\r\n        /**\r\n         * number of pixels to move to trigger an input event (e.g., drag, pinch) or disable a clicked event\r\n         * @type {number}\r\n         */\r\n        this.threshold = this.options.threshold\r\n\r\n        this.options.divWheel = this.options.divWheel || document.body\r\n\r\n        if (!this.options.noOnContextMenu)\r\n        {\r\n            this.options.divWheel.oncontextmenu = e => e.preventDefault()\r\n        }\r\n\r\n        if (!this.options.noTicker)\r\n        {\r\n            this.tickerFunction = () => this.update(this.options.ticker.elapsedMS)\r\n            this.options.ticker.add(this.tickerFunction)\r\n        }\r\n\r\n        this.input = new InputManager(this)\r\n\r\n        /**\r\n         * Use this to add user plugins or access existing plugins (e.g., to pause, resume, or remove them)\r\n         * @type {PluginManager}\r\n         */\r\n        this.plugins = new PluginManager(this)\r\n    }\r\n\r\n    /**\r\n     * overrides PIXI.Container's destroy to also remove the 'wheel' and PIXI.Ticker listeners\r\n     * @param {(object|boolean)} [options] - Options parameter. A boolean will act as if all options have been set to that value\r\n     * @param {boolean} [options.children=false] - if set to true, all the children will have their destroy method called as well. 'options' will be passed on to those calls.\r\n     * @param {boolean} [options.texture=false] - Only used for child Sprites if options.children is set to true. Should it destroy the texture of the child sprite\r\n     * @param {boolean} [options.baseTexture=false] - Only used for child Sprites if options.children is set to true. Should it destroy the base texture of the child sprite     */\r\n    destroy(options)\r\n    {\r\n        if (!this.options.noTicker)\r\n        {\r\n            this.options.ticker.remove(this.tickerFunction)\r\n        }\r\n        this.input.destroy()\r\n        super.destroy(options)\r\n    }\r\n\r\n    /**\r\n     * update viewport on each frame\r\n     * by default, you do not need to call this unless you set options.noTicker=true\r\n     * @param {number} elapsed time in milliseconds since last update\r\n     */\r\n    update(elapsed)\r\n    {\r\n        if (!this.pause)\r\n        {\r\n            this.plugins.update(elapsed)\r\n\r\n            if (this.lastViewport)\r\n            {\r\n                // check for moved-end event\r\n                if (this.lastViewport.x !== this.x || this.lastViewport.y !== this.y)\r\n                {\r\n                    this.moving = true\r\n                }\r\n                else\r\n                {\r\n                    if (this.moving)\r\n                    {\r\n                        this.emit('moved-end', this)\r\n                        this.moving = false\r\n                    }\r\n                }\r\n                // check for zoomed-end event\r\n                if (this.lastViewport.scaleX !== this.scale.x || this.lastViewport.scaleY !== this.scale.y)\r\n                {\r\n                    this.zooming = true\r\n                }\r\n                else\r\n                {\r\n                    if (this.zooming)\r\n                    {\r\n                        this.emit('zoomed-end', this)\r\n                        this.zooming = false\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!this.forceHitArea)\r\n            {\r\n                this._hitAreaDefault = new PIXI.Rectangle(this.left, this.top, this.worldScreenWidth, this.worldScreenHeight)\r\n                this.hitArea = this._hitAreaDefault\r\n            }\r\n\r\n            this._dirty = this._dirty || !this.lastViewport ||\r\n                this.lastViewport.x !== this.x || this.lastViewport.y !== this.y ||\r\n                this.lastViewport.scaleX !== this.scale.x || this.lastViewport.scaleY !== this.scale.y\r\n\r\n            this.lastViewport = {\r\n                x: this.x,\r\n                y: this.y,\r\n                scaleX: this.scale.x,\r\n                scaleY: this.scale.y\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * use this to set screen and world sizes--needed for pinch/wheel/clamp/bounce\r\n     * @param {number} [screenWidth=window.innerWidth]\r\n     * @param {number} [screenHeight=window.innerHeight]\r\n     * @param {number} [worldWidth]\r\n     * @param {number} [worldHeight]\r\n     */\r\n    resize(screenWidth = window.innerWidth, screenHeight = window.innerHeight, worldWidth, worldHeight)\r\n    {\r\n        this.screenWidth = screenWidth\r\n        this.screenHeight = screenHeight\r\n        if (typeof worldWidth !== 'undefined')\r\n        {\r\n            this._worldWidth = worldWidth\r\n        }\r\n        if (typeof worldHeight !== 'undefined')\r\n        {\r\n            this._worldHeight = worldHeight\r\n        }\r\n        this.plugins.resize()\r\n    }\r\n\r\n    /**\r\n     * world width in pixels\r\n     * @type {number}\r\n     */\r\n    get worldWidth()\r\n    {\r\n        if (this._worldWidth)\r\n        {\r\n            return this._worldWidth\r\n        }\r\n        else\r\n        {\r\n            return this.width / this.scale.x\r\n        }\r\n    }\r\n    set worldWidth(value)\r\n    {\r\n        this._worldWidth = value\r\n        this.plugins.resize()\r\n    }\r\n\r\n    /**\r\n     * world height in pixels\r\n     * @type {number}\r\n     */\r\n    get worldHeight()\r\n    {\r\n        if (this._worldHeight)\r\n        {\r\n            return this._worldHeight\r\n        }\r\n        else\r\n        {\r\n            return this.height / this.scale.y\r\n        }\r\n    }\r\n    set worldHeight(value)\r\n    {\r\n        this._worldHeight = value\r\n        this.plugins.resize()\r\n    }\r\n\r\n    /**\r\n     * get visible bounds of viewport\r\n     * @returns {PIXI.Rectangle}\r\n     */\r\n    getVisibleBounds()\r\n    {\r\n        return new PIXI.Rectangle(this.left, this.top, this.worldScreenWidth, this.worldScreenHeight)\r\n    }\r\n\r\n    /**\r\n     * change coordinates from screen to world\r\n     * @param {(number|PIXI.Point)} x or point\r\n     * @param {number} [y]\r\n     * @return {PIXI.Point}\r\n     */\r\n    toWorld(x, y)\r\n    {\r\n        if (arguments.length === 2)\r\n        {\r\n            return this.toLocal(new PIXI.Point(x, y))\r\n        }\r\n        else\r\n        {\r\n            return this.toLocal(x)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * change coordinates from world to screen\r\n     * @param {(number|PIXI.Point)} x or point\r\n     * @param {number} [y]\r\n     * @return {PIXI.Point}\r\n     */\r\n    toScreen(x, y)\r\n    {\r\n        if (arguments.length === 2)\r\n        {\r\n            return this.toGlobal(new PIXI.Point(x, y))\r\n        }\r\n        else\r\n        {\r\n            return this.toGlobal(x)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * screen width in world coordinates\r\n     * @type {number}\r\n     */\r\n    get worldScreenWidth()\r\n    {\r\n        return this.screenWidth / this.scale.x\r\n    }\r\n\r\n    /**\r\n     * screen height in world coordinates\r\n     * @type {number}\r\n     */\r\n    get worldScreenHeight()\r\n    {\r\n        return this.screenHeight / this.scale.y\r\n    }\r\n\r\n    /**\r\n     * world width in screen coordinates\r\n     * @type {number}\r\n     */\r\n    get screenWorldWidth()\r\n    {\r\n        return this.worldWidth * this.scale.x\r\n    }\r\n\r\n    /**\r\n     * world height in screen coordinates\r\n     * @type {number}\r\n     */\r\n    get screenWorldHeight()\r\n    {\r\n        return this.worldHeight * this.scale.y\r\n    }\r\n\r\n    /**\r\n     * center of screen in world coordinates\r\n     * @type {PIXI.Point}\r\n     */\r\n    get center()\r\n    {\r\n        return new PIXI.Point(this.worldScreenWidth / 2 - this.x / this.scale.x, this.worldScreenHeight / 2 - this.y / this.scale.y)\r\n    }\r\n    set center(value)\r\n    {\r\n        this.moveCenter(value)\r\n    }\r\n\r\n    /**\r\n     * move center of viewport to point\r\n     * @param {(number|PIXI.Point)} x or point\r\n     * @param {number} [y]\r\n     * @return {Viewport} this\r\n     */\r\n    moveCenter()\r\n    {\r\n        let x, y\r\n        if (!isNaN(arguments[0]))\r\n        {\r\n            x = arguments[0]\r\n            y = arguments[1]\r\n        }\r\n        else\r\n        {\r\n            x = arguments[0].x\r\n            y = arguments[0].y\r\n        }\r\n        this.position.set((this.worldScreenWidth / 2 - x) * this.scale.x, (this.worldScreenHeight / 2 - y) * this.scale.y)\r\n        this.plugins.reset()\r\n        this.dirty = true\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * top-left corner of Viewport\r\n     * @type {PIXI.Point}\r\n     */\r\n    get corner()\r\n    {\r\n        return new PIXI.Point(-this.x / this.scale.x, -this.y / this.scale.y)\r\n    }\r\n    set corner(value)\r\n    {\r\n        this.moveCorner(value)\r\n    }\r\n\r\n    /**\r\n     * move viewport's top-left corner; also clamps and resets decelerate and bounce (as needed)\r\n     * @param {(number|PIXI.Point)} x or point\r\n     * @param {number} [y]\r\n     * @return {Viewport} this\r\n     */\r\n    moveCorner(x, y)\r\n    {\r\n        if (arguments.length === 1)\r\n        {\r\n            this.position.set(-x.x * this.scale.x, -x.y * this.scale.y)\r\n        }\r\n        else\r\n        {\r\n            this.position.set(-x * this.scale.x, -y * this.scale.y)\r\n        }\r\n        this.plugins.reset()\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * change zoom so the width fits in the viewport\r\n     * @param {number} [width=this.worldWidth] in world coordinates\r\n     * @param {boolean} [center] maintain the same center\r\n     * @param {boolean} [scaleY=true] whether to set scaleY=scaleX\r\n     * @param {boolean} [noClamp] whether to disable clamp-zoom\r\n     * @returns {Viewport} this\r\n     */\r\n    fitWidth(width, center, scaleY = true, noClamp)\r\n    {\r\n        let save\r\n        if (center)\r\n        {\r\n            save = this.center\r\n        }\r\n        this.scale.x = this.screenWidth / width\r\n\r\n        if (scaleY)\r\n        {\r\n            this.scale.y = this.scale.x\r\n        }\r\n\r\n        const clampZoom = this.plugins.get('clamp-zoom')\r\n        if (!noClamp && clampZoom)\r\n        {\r\n            clampZoom.clamp()\r\n        }\r\n\r\n        if (center)\r\n        {\r\n            this.moveCenter(save)\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * change zoom so the height fits in the viewport\r\n     * @param {number} [height=this.worldHeight] in world coordinates\r\n     * @param {boolean} [center] maintain the same center of the screen after zoom\r\n     * @param {boolean} [scaleX=true] whether to set scaleX = scaleY\r\n     * @param {boolean} [noClamp] whether to disable clamp-zoom\r\n     * @returns {Viewport} this\r\n     */\r\n    fitHeight(height, center, scaleX = true, noClamp)\r\n    {\r\n        let save\r\n        if (center)\r\n        {\r\n            save = this.center\r\n        }\r\n        this.scale.y = this.screenHeight / height\r\n\r\n        if (scaleX)\r\n        {\r\n            this.scale.x = this.scale.y\r\n        }\r\n\r\n        const clampZoom = this.plugins.get('clamp-zoom')\r\n        if (!noClamp && clampZoom)\r\n        {\r\n            clampZoom.clamp()\r\n        }\r\n\r\n        if (center)\r\n        {\r\n            this.moveCenter(save)\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * change zoom so it fits the entire world in the viewport\r\n     * @param {boolean} center maintain the same center of the screen after zoom\r\n     * @returns {Viewport} this\r\n     */\r\n    fitWorld(center)\r\n    {\r\n        let save\r\n        if (center)\r\n        {\r\n            save = this.center\r\n        }\r\n        this.scale.x = this.screenWidth / this.worldWidth\r\n        this.scale.y = this.screenHeight / this.worldHeight\r\n        if (this.scale.x < this.scale.y)\r\n        {\r\n            this.scale.y = this.scale.x\r\n        }\r\n        else\r\n        {\r\n            this.scale.x = this.scale.y\r\n        }\r\n\r\n        const clampZoom = this.plugins.get('clamp-zoom')\r\n        if (clampZoom)\r\n        {\r\n            clampZoom.clamp()\r\n        }\r\n\r\n        if (center)\r\n        {\r\n            this.moveCenter(save)\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * change zoom so it fits the size or the entire world in the viewport\r\n     * @param {boolean} [center] maintain the same center of the screen after zoom\r\n     * @param {number} [width=this.worldWidth] desired width\r\n     * @param {number} [height=this.worldHeight] desired height\r\n     * @returns {Viewport} this\r\n     */\r\n    fit(center, width = this.worldWidth, height = this.worldHeight)\r\n    {\r\n        let save\r\n        if (center)\r\n        {\r\n            save = this.center\r\n        }\r\n        this.scale.x = this.screenWidth / width\r\n        this.scale.y = this.screenHeight / height\r\n        if (this.scale.x < this.scale.y)\r\n        {\r\n            this.scale.y = this.scale.x\r\n        }\r\n        else\r\n        {\r\n            this.scale.x = this.scale.y\r\n        }\r\n        const clampZoom = this.plugins.get('clamp-zoom')\r\n        if (clampZoom)\r\n        {\r\n            clampZoom.clamp()\r\n        }\r\n        if (center)\r\n        {\r\n            this.moveCenter(save)\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * zoom viewport to specific value\r\n     * @param {number} scale value (e.g., 1 would be 100%, 0.25 would be 25%)\r\n     * @param {boolean} [center] maintain the same center of the screen after zoom\r\n     * @return {Viewport} this\r\n     */\r\n    setZoom(scale, center)\r\n    {\r\n        let save\r\n        if (center)\r\n        {\r\n            save = this.center\r\n        }\r\n        this.scale.set(scale)\r\n        const clampZoom = this.plugins.get('clamp-zoom')\r\n        if (clampZoom)\r\n        {\r\n            clampZoom.clamp()\r\n        }\r\n        if (center)\r\n        {\r\n            this.moveCenter(save)\r\n        }\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * zoom viewport by a certain percent (in both x and y direction)\r\n     * @param {number} percent change (e.g., 0.25 would increase a starting scale of 1.0 to 1.25)\r\n     * @param {boolean} [center] maintain the same center of the screen after zoom\r\n     * @return {Viewport} this\r\n     */\r\n    zoomPercent(percent, center)\r\n    {\r\n        return this.setZoom(this.scale.x + this.scale.x * percent, center)\r\n    }\r\n\r\n    /**\r\n     * zoom viewport by increasing/decreasing width by a certain number of pixels\r\n     * @param {number} change in pixels\r\n     * @param {boolean} [center] maintain the same center of the screen after zoom\r\n     * @return {Viewport} this\r\n     */\r\n    zoom(change, center)\r\n    {\r\n        this.fitWidth(change + this.worldScreenWidth, center)\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * @param {SnapZoomOptions} options\r\n     */\r\n    snapZoom(options)\r\n    {\r\n        this.plugins.add('snap-zoom', new SnapZoom(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * is container out of world bounds\r\n     * @returns {OutOfBounds}\r\n     */\r\n    OOB()\r\n    {\r\n        return {\r\n            left: this.left < 0,\r\n            right: this.right > this._worldWidth,\r\n            top: this.top < 0,\r\n            bottom: this.bottom > this._worldHeight,\r\n            cornerPoint: new PIXI.Point(\r\n                this._worldWidth * this.scale.x - this.screenWidth,\r\n                this._worldHeight * this.scale.y - this.screenHeight\r\n            )\r\n        }\r\n    }\r\n\r\n    /**\r\n     * world coordinates of the right edge of the screen\r\n     * @type {number}\r\n     */\r\n    get right()\r\n    {\r\n        return -this.x / this.scale.x + this.worldScreenWidth\r\n    }\r\n    set right(value)\r\n    {\r\n        this.x = -value * this.scale.x + this.screenWidth\r\n        this.plugins.reset()\r\n    }\r\n\r\n    /**\r\n     * world coordinates of the left edge of the screen\r\n     * @type { number }\r\n     */\r\n    get left()\r\n    {\r\n        return -this.x / this.scale.x\r\n    }\r\n    set left(value)\r\n    {\r\n        this.x = -value * this.scale.x\r\n        this.plugins.reset()\r\n    }\r\n\r\n    /**\r\n     * world coordinates of the top edge of the screen\r\n     * @type {number}\r\n     */\r\n    get top()\r\n    {\r\n        return -this.y / this.scale.y\r\n    }\r\n    set top(value)\r\n    {\r\n        this.y = -value * this.scale.y\r\n        this.plugins.reset()\r\n    }\r\n\r\n    /**\r\n     * world coordinates of the bottom edge of the screen\r\n     * @type {number}\r\n     */\r\n    get bottom()\r\n    {\r\n        return -this.y / this.scale.y + this.worldScreenHeight\r\n    }\r\n    set bottom(value)\r\n    {\r\n        this.y = -value * this.scale.y + this.screenHeight\r\n        this.plugins.reset()\r\n    }\r\n\r\n    /**\r\n     * determines whether the viewport is dirty (i.e., needs to be renderered to the screen because of a change)\r\n     * @type {boolean}\r\n     */\r\n    get dirty()\r\n    {\r\n        return this._dirty\r\n    }\r\n    set dirty(value)\r\n    {\r\n        this._dirty = value\r\n    }\r\n\r\n    /**\r\n     * permanently changes the Viewport's hitArea\r\n     * NOTE: if not set then hitArea = PIXI.Rectangle(Viewport.left, Viewport.top, Viewport.worldScreenWidth, Viewport.worldScreenHeight)\r\n     * @returns {HitArea}\r\n     */\r\n    get forceHitArea()\r\n    {\r\n        return this._forceHitArea\r\n    }\r\n    set forceHitArea(value)\r\n    {\r\n        if (value)\r\n        {\r\n            this._forceHitArea = value\r\n            this.hitArea = value\r\n        }\r\n        else\r\n        {\r\n            this._forceHitArea = null\r\n            this.hitArea = new PIXI.Rectangle(0, 0, this.worldWidth, this.worldHeight)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * enable one-finger touch to drag\r\n     * @param {DragOptions} [options]\r\n     * @returns {Viewport} this\r\n     */\r\n    drag(options)\r\n    {\r\n        this.plugins.add('drag', new Drag(this, options))\r\n        return this\r\n    }\r\n    \r\n    /**\r\n     * enable click-and-drag painting\r\n     * @param {PaintOptions} [options]\r\n     * @returns {Viewport} this\r\n     */\r\n    paint(options)\r\n    {\r\n        this.plugins.add('paint', new Paint(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * clamp to world boundaries or other provided boundaries\r\n     * NOTES:\r\n     *   clamp is disabled if called with no options; use { direction: 'all' } for all edge clamping\r\n     *   screenWidth, screenHeight, worldWidth, and worldHeight needs to be set for this to work properly\r\n     * @param {ClampOptions} [options]\r\n     * @returns {Viewport} this\r\n     */\r\n    clamp(options)\r\n    {\r\n        this.plugins.add('clamp', new Clamp(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * decelerate after a move\r\n     * @param {DecelerateOptions} [options]\r\n     * @return {Viewport} this\r\n     */\r\n    decelerate(options)\r\n    {\r\n        this.plugins.add('decelerate', new Decelerate(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * bounce on borders\r\n     * NOTE: screenWidth, screenHeight, worldWidth, and worldHeight needs to be set for this to work properly\r\n     * @param {object} [options]\r\n     * @param {string} [options.sides=all] all, horizontal, vertical, or combination of top, bottom, right, left (e.g., 'top-bottom-right')\r\n     * @param {number} [options.friction=0.5] friction to apply to decelerate if active\r\n     * @param {number} [options.time=150] time in ms to finish bounce\r\n     * @param {string|function} [options.ease=easeInOutSine] ease function or name (see http://easings.net/ for supported names)\r\n     * @param {string} [options.underflow=center] (top/bottom/center and left/right/center, or center) where to place world if too small for screen\r\n     * @return {Viewport} this\r\n     */\r\n    bounce(options)\r\n    {\r\n        this.plugins.add('bounce', new Bounce(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * enable pinch to zoom and two-finger touch to drag\r\n     * @param {PinchOptions} [options]\r\n     * @return {Viewport} this\r\n     */\r\n    pinch(options)\r\n    {\r\n        this.plugins.add('pinch', new Pinch(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * snap to a point\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {SnapOptions} [options]\r\n     * @return {Viewport} this\r\n     */\r\n    snap(x, y, options)\r\n    {\r\n        this.plugins.add('snap', new Snap(this, x, y, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * follow a target\r\n     * NOTES:\r\n     *    - uses the (x, y) as the center to follow; for PIXI.Sprite to work properly, use sprite.anchor.set(0.5)\r\n     *    - options.acceleration is not perfect as it doesn't know the velocity of the target\r\n     *    - it adds acceleration to the start of movement and deceleration to the end of movement when the target is stopped\r\n     * @param {PIXI.DisplayObject} target to follow\r\n     * @param {FollowOptions} [options]\r\n     * @returns {Viewport} this\r\n     */\r\n    follow(target, options)\r\n    {\r\n        this.plugins.add('follow', new Follow(this, target, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * zoom using mouse wheel\r\n     * @param {WheelOptions} [options]\r\n     * @return {Viewport} this\r\n     */\r\n    wheel(options)\r\n    {\r\n        this.plugins.add('wheel', new Wheel(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * enable clamping of zoom to constraints\r\n     * @param {ClampZoomOptions} [options]\r\n     * @return {Viewport} this\r\n     */\r\n    clampZoom(options)\r\n    {\r\n        this.plugins.add('clamp-zoom', new ClampZoom(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * Scroll viewport when mouse hovers near one of the edges or radius-distance from center of screen.\r\n     * @param {MouseEdgesOptions} [options]\r\n     */\r\n    mouseEdges(options)\r\n    {\r\n        this.plugins.add('mouse-edges', new MouseEdges(this, options))\r\n        return this\r\n    }\r\n\r\n    /**\r\n     * pause viewport (including animation updates such as decelerate)\r\n     * @type {boolean}\r\n     */\r\n    get pause()\r\n    {\r\n        return this._pause\r\n    }\r\n    set pause(value)\r\n    {\r\n        this._pause = value\r\n        this.lastViewport = null\r\n        this.moving = false\r\n        this.zooming = false\r\n        if (value)\r\n        {\r\n            this.input.pause()\r\n        }\r\n    }\r\n\r\n    /**\r\n     * move the viewport so the bounding box is visible\r\n     * @param {number} x - left\r\n     * @param {number} y - top\r\n     * @param {number} width\r\n     * @param {number} height\r\n     */\r\n    ensureVisible(x, y, width, height)\r\n    {\r\n        if (x < this.left)\r\n        {\r\n            this.left = x\r\n        }\r\n        else if (x + width > this.right)\r\n        {\r\n            this.right = x + width\r\n        }\r\n        if (y < this.top)\r\n        {\r\n            this.top = y\r\n        }\r\n        else if (y + height > this.bottom)\r\n        {\r\n            this.bottom = y + height\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * fires after a mouse or touch click\r\n * @event Viewport#clicked\r\n * @type {object}\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} world\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when a drag starts\r\n * @event Viewport#drag-start\r\n * @type {object}\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} world\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when a drag ends\r\n * @event Viewport#drag-end\r\n * @type {object}\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} world\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when painting starts\r\n * @event Viewport#paint-start\r\n * @type {object}\r\n * @property {PIXI.interaction.InteractionEvent} interactionEvent\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} screenStart\r\n * @property {PIXI.Point} world\r\n * @property {PIXI.Point} worldStart\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when painting is in progress\r\n * @event Viewport#painted\r\n * @type {object}\r\n * @property {PIXI.interaction.InteractionEvent} interactionEvent\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} screenStart\r\n * @property {PIXI.Point} world\r\n * @property {PIXI.Point} worldStart\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when painting ends\r\n * @event Viewport#paint-end\r\n * @type {object}\r\n * @property {PIXI.interaction.InteractionEvent} interactionEvent\r\n * @property {PIXI.Point} screen\r\n * @property {PIXI.Point} screenStart\r\n * @property {PIXI.Point} world\r\n * @property {PIXI.Point} worldStart\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when a pinch starts\r\n * @event Viewport#pinch-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a pinch end\r\n * @event Viewport#pinch-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a snap starts\r\n * @event Viewport#snap-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a snap ends\r\n * @event Viewport#snap-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a snap-zoom starts\r\n * @event Viewport#snap-zoom-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a snap-zoom ends\r\n * @event Viewport#snap-zoom-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a bounce starts in the x direction\r\n * @event Viewport#bounce-x-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a bounce ends in the x direction\r\n * @event Viewport#bounce-x-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a bounce starts in the y direction\r\n * @event Viewport#bounce-y-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a bounce ends in the y direction\r\n * @event Viewport#bounce-y-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when for a mouse wheel event\r\n * @event Viewport#wheel\r\n * @type {object}\r\n * @property {object} wheel\r\n * @property {number} wheel.dx\r\n * @property {number} wheel.dy\r\n * @property {number} wheel.dz\r\n * @property {Viewport} viewport\r\n */\r\n\r\n/**\r\n * fires when a wheel-scroll occurs\r\n * @event Viewport#wheel-scroll\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when a mouse-edge starts to scroll\r\n * @event Viewport#mouse-edge-start\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when the mouse-edge scrolling ends\r\n * @event Viewport#mouse-edge-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when viewport moves through UI interaction, deceleration, or follow\r\n * @event Viewport#moved\r\n * @type {object}\r\n * @property {Viewport} viewport\r\n * @property {string} type (drag, snap, pinch, follow, bounce-x, bounce-y, clamp-x, clamp-y, decelerate, mouse-edges, wheel)\r\n */\r\n\r\n/**\r\n * fires when viewport moves through UI interaction, deceleration, or follow\r\n * @event Viewport#zoomed\r\n * @type {object}\r\n * @property {Viewport} viewport\r\n * @property {string} type (drag-zoom, pinch, wheel, clamp-zoom)\r\n */\r\n\r\n/**\r\n * fires when viewport stops moving for any reason\r\n * @event Viewport#moved-end\r\n * @type {Viewport}\r\n */\r\n\r\n/**\r\n * fires when viewport stops zooming for any reason\r\n * @event Viewport#zoomed-end\r\n * @type {Viewport}\r\n */\r\n\r\n/** @typedef HitArea {(PIXI.Rectangle | PIXI.Circle | PIXI.Ellipse | PIXI.Polygon | PIXI.RoundedRectangle)} */\r\n\r\n/**\r\n * @typedef {Object} OutOfBounds\r\n * @private\r\n * @property {boolean} left\r\n * @property {boolean} right\r\n * @property {boolean} top\r\n * @property {boolean} bottom\r\n * @property {PIXI.Point} cornerPoint\r\n */\r\n\r\n/**\r\n * @typedef {Object} LastViewport\r\n * @private\r\n * @property {number} x\r\n * @property {number} y\r\n * @property {number} scaleX\r\n * @property {number} scaleY\r\n */"],"names":["InputManager","[object Object]","viewport","this","touches","addListeners","interactive","forceHitArea","hitArea","PIXI.Rectangle","worldWidth","worldHeight","on","down","move","up","wheelFunction","e","handleWheel","options","divWheel","addEventListener","passive","passiveWheel","isMouseDown","removeEventListener","event","pause","worldVisible","data","pointerType","get","pointerId","push","id","last","count","global","clone","decelerate","plugins","bounce","isActive","clickedAvailable","stopPropagation","change","Math","abs","threshold","stop","distX","x","distY","y","checkThreshold","remove","emit","screen","world","toWorld","point","PIXI.Point","interaction","mapPositionToPoint","clientX","clientY","toLocal","getPointerPosition","left","right","top","bottom","wheel","touch","i","length","splice","PLUGIN_ORDER","PluginManager","list","name","plugin","index","current","indexOf","sort","elapsed","update","resize","reset","clamp","resume","result","Plugin","parent","paused","dragOptions","direction","wheelScroll","reverse","clampWheel","underflow","factor","mouseButtons","Drag","super","Object","assign","moved","xDirection","yDirection","parseUnderflow","buttons","mouse","toLowerCase","underflowX","underflowY","isMouse","input","button","checkButtons","active","newPoint","type","pointer","deltaX","deltaY","preventDefault","screenWorldWidth","screenWidth","scale","screenWorldHeight","screenHeight","paintOptions","Paint","painted","paintStart","paintStartWorld","interactionEvent","screenStart","worldStart","pinchOptions","noDrag","percent","center","Pinch","pointers","first","second","sqrt","pow","oldPoint","moveCenter","toGlobal","lastCenter","pinching","clampOptions","Clamp","noUnderflow","original","clampZoomOptions","minWidth","minHeight","maxWidth","maxHeight","ClampZoom","width","worldScreenWidth","height","worldScreenHeight","fitWidth","fitHeight","decelerateOptions","friction","minSpeed","Decelerate","saved","time","performance","now","save","percentChangeX","percentChangeY","penner","factory","module","umd","linear","t","b","c","d","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","a","p","s","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","call","ease","defaults","Penner","bounceOptions","sides","Bounce","toX","toY","end","start","delta","oob","OOB","drag","pinch","cornerPoint","calcUnderflowX","calcUnderflowY","snapOptions","topLeft","interrupt","removeOnComplete","removeOnInterrupt","forceStart","Snap","startEase","snapping","corner","startX","startY","finished","moveCorner","snapStart","snapZoomOptions","removeOnInterrupts","noMove","SnapZoom","x_scale","y_scale","xIndependent","yIndependent","container","createSnapping","_screenWidth","_screenHeight","oldCenter","set","followOptions","speed","acceleration","radius","Follow","target","velocity","angle","atan2","distance","decelerationDistance","min","max","changeX","changeY","wheelOptions","smooth","Wheel","smoothing","smoothingCenter","smoothingCount","step","deltaMode","dx","dy","dz","deltaZ","mouseEdgesOptions","noDecelerate","allowButtons","MouseEdges","radiusSquared","window","innerWidth","innerHeight","horizontal","vertical","identifier","toScreen","round","decelerateHorizontal","decelerateVertical","activate","viewportOptions","noTicker","noOnContextMenu","PIXI.Container","ticker","pixiNS","PIXI","parseInt","exec","PIXI.VERSION","shared","Ticker","_worldWidth","_worldHeight","document","body","oncontextmenu","tickerFunction","elapsedMS","add","destroy","lastViewport","moving","scaleX","scaleY","zooming","_hitAreaDefault","_dirty","value","arguments","isNaN","position","dirty","noClamp","clampZoom","setZoom","_forceHitArea","_pause"],"mappings":"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"}